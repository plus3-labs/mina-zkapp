{
	"id": 0,
	"name": "o1js-merkle",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 841,
			"name": "BaseMerkleProof",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Merkle proof CircuitValue for an element in a MerkleTree."
					}
				]
			},
			"children": [
				{
					"id": 887,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 888,
							"name": "new BaseMerkleProof",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 889,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 890,
									"name": "sideNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 841,
								"name": "BaseMerkleProof"
							},
							"overwrites": {
								"type": "reference",
								"name": "CircuitValue.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CircuitValue.constructor"
					}
				},
				{
					"id": 891,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 892,
					"name": "sideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L28"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				},
				{
					"id": 842,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 26,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L26"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 904,
					"name": "assertEquals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 905,
							"name": "assertEquals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 906,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.assertEquals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.assertEquals"
					}
				},
				{
					"id": 901,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 902,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 903,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.equals"
					}
				},
				{
					"id": 893,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 894,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 907,
					"name": "isConstant",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 908,
							"name": "isConstant",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.isConstant"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.isConstant"
					}
				},
				{
					"id": 899,
					"name": "toConstant",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 900,
							"name": "toConstant",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"id": 841,
								"name": "BaseMerkleProof"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toConstant"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toConstant"
					}
				},
				{
					"id": 895,
					"name": "toFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 896,
							"name": "toFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toFields"
					}
				},
				{
					"id": 897,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 898,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toJSON"
					}
				},
				{
					"id": 867,
					"name": "check",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 46,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 868,
							"name": "check",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 869,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 870,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 869,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 871,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 869,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.check"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.check"
					}
				},
				{
					"id": 862,
					"name": "fromFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 45,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 863,
							"name": "fromFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 864,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 865,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 864,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 866,
									"name": "xs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 864,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								],
								"name": "InstanceType",
								"qualifiedName": "InstanceType",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.fromFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.fromFields"
					}
				},
				{
					"id": 882,
					"name": "fromJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 49,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 883,
							"name": "fromJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 884,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 885,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 884,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 886,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 884,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								],
								"name": "InstanceType",
								"qualifiedName": "InstanceType",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.fromJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.fromJSON"
					}
				},
				{
					"id": 843,
					"name": "fromObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 34,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 844,
							"name": "fromObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 845,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 846,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 845,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 847,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 845,
														"name": "T",
														"qualifiedName": "T",
														"package": "o1js"
													}
												],
												"name": "InstanceType",
												"qualifiedName": "InstanceType",
												"package": "typescript"
											}
										],
										"name": "NonMethods",
										"qualifiedName": "NonMethods",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 845,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								],
								"name": "InstanceType",
								"qualifiedName": "InstanceType",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.fromObject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.fromObject"
					}
				},
				{
					"id": 848,
					"name": "sizeInFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 35,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 849,
							"name": "sizeInFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.sizeInFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.sizeInFields"
					}
				},
				{
					"id": 855,
					"name": "toAuxiliary",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 37,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 856,
							"name": "toAuxiliary",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "tuple"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toAuxiliary"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toAuxiliary"
					}
				},
				{
					"id": 872,
					"name": "toConstant",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 47,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 873,
							"name": "toConstant",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 874,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 875,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 874,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 876,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 874,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 874,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								],
								"name": "InstanceType",
								"qualifiedName": "InstanceType",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toConstant"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toConstant"
					}
				},
				{
					"id": 850,
					"name": "toFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 36,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 851,
							"name": "toFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 852,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 853,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 852,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 854,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 852,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toFields"
					}
				},
				{
					"id": 857,
					"name": "toInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 38,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 858,
							"name": "toInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 859,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 860,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 859,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 861,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 859,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HashInput",
								"qualifiedName": "HashInput",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toInput"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toInput"
					}
				},
				{
					"id": 877,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 48,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 878,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 879,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 880,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 879,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 881,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 879,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						887
					]
				},
				{
					"title": "Properties",
					"children": [
						891,
						892,
						842
					]
				},
				{
					"title": "Methods",
					"children": [
						904,
						901,
						893,
						907,
						899,
						895,
						897,
						867,
						862,
						882,
						843,
						848,
						855,
						872,
						850,
						857,
						877
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/merkle/proofs.ts",
					"line": 25,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L25"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "CircuitValue",
					"qualifiedName": "CircuitValue",
					"package": "o1js"
				}
			]
		},
		{
			"id": 1999,
			"name": "BaseSiblingPath",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2049,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/sibling_path.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 2050,
							"name": "new BaseSiblingPath",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2051,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1999,
								"name": "BaseSiblingPath"
							},
							"overwrites": {
								"type": "reference",
								"name": "CircuitValue.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CircuitValue.constructor"
					}
				},
				{
					"id": 2052,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/sibling_path.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L8"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				},
				{
					"id": 2000,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/sibling_path.ts",
							"line": 7,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2074,
					"name": "assertEquals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2075,
							"name": "assertEquals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 2076,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.assertEquals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.assertEquals"
					}
				},
				{
					"id": 2055,
					"name": "calculateRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/sibling_path.ts",
							"line": 38,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 2056,
							"name": "calculateRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2057,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 2058,
									"name": "leafIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 2059,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Hasher"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 2071,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2072,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 2073,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.equals"
					}
				},
				{
					"id": 2060,
					"name": "getSubtreeSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/sibling_path.ts",
							"line": 57,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 2061,
							"name": "getSubtreeSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2062,
									"name": "subtreeHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1999,
								"name": "BaseSiblingPath"
							}
						}
					]
				},
				{
					"id": 2053,
					"name": "height",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/sibling_path.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 2054,
							"name": "height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 2077,
					"name": "isConstant",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2078,
							"name": "isConstant",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.isConstant"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.isConstant"
					}
				},
				{
					"id": 2069,
					"name": "toConstant",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2070,
							"name": "toConstant",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"id": 1999,
								"name": "BaseSiblingPath"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toConstant"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toConstant"
					}
				},
				{
					"id": 2065,
					"name": "toFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2066,
							"name": "toFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toFields"
					}
				},
				{
					"id": 2067,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2068,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toJSON"
					}
				},
				{
					"id": 2063,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/sibling_path.ts",
							"line": 66,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L66"
						}
					],
					"signatures": [
						{
							"id": 2064,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2029,
					"name": "check",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 46,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2030,
							"name": "check",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 2031,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 2032,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 869,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 2033,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 869,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.check"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.check"
					}
				},
				{
					"id": 2024,
					"name": "fromFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 45,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2025,
							"name": "fromFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 2026,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 2027,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 864,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 2028,
									"name": "xs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 864,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								],
								"name": "InstanceType",
								"qualifiedName": "InstanceType",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.fromFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.fromFields"
					}
				},
				{
					"id": 2044,
					"name": "fromJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 49,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2045,
							"name": "fromJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 2046,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 2047,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 884,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 2048,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 884,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								],
								"name": "InstanceType",
								"qualifiedName": "InstanceType",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.fromJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.fromJSON"
					}
				},
				{
					"id": 2005,
					"name": "fromObject",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 34,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2006,
							"name": "fromObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 2007,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 2008,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 845,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 2009,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 845,
														"name": "T",
														"qualifiedName": "T",
														"package": "o1js"
													}
												],
												"name": "InstanceType",
												"qualifiedName": "InstanceType",
												"package": "typescript"
											}
										],
										"name": "NonMethods",
										"qualifiedName": "NonMethods",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 845,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								],
								"name": "InstanceType",
								"qualifiedName": "InstanceType",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.fromObject"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.fromObject"
					}
				},
				{
					"id": 2010,
					"name": "sizeInFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 35,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2011,
							"name": "sizeInFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.sizeInFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.sizeInFields"
					}
				},
				{
					"id": 2017,
					"name": "toAuxiliary",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 37,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2018,
							"name": "toAuxiliary",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "tuple"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toAuxiliary"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toAuxiliary"
					}
				},
				{
					"id": 2034,
					"name": "toConstant",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 47,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2035,
							"name": "toConstant",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 2036,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 2037,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 874,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 2038,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 874,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 874,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								],
								"name": "InstanceType",
								"qualifiedName": "InstanceType",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toConstant"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toConstant"
					}
				},
				{
					"id": 2012,
					"name": "toFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 36,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2013,
							"name": "toFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 2014,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 2015,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 852,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 2016,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 852,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toFields"
					}
				},
				{
					"id": 2019,
					"name": "toInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 38,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2020,
							"name": "toInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 2021,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 2022,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 859,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 2023,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 859,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HashInput",
								"qualifiedName": "HashInput",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toInput"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toInput"
					}
				},
				{
					"id": 2039,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 48,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2040,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 2041,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "AnyConstructor",
										"qualifiedName": "AnyConstructor",
										"package": "o1js"
									}
								}
							],
							"parameters": [
								{
									"id": 2042,
									"name": "this",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 879,
										"name": "T",
										"qualifiedName": "T",
										"package": "o1js"
									}
								},
								{
									"id": 2043,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 879,
												"name": "T",
												"qualifiedName": "T",
												"package": "o1js"
											}
										],
										"name": "InstanceType",
										"qualifiedName": "InstanceType",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CircuitValue.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CircuitValue.toJSON"
					}
				},
				{
					"id": 2001,
					"name": "zero",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/sibling_path.ts",
							"line": 25,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 2002,
							"name": "zero",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2003,
									"name": "zeroElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 2004,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Hasher"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 1999,
								"name": "BaseSiblingPath"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2049
					]
				},
				{
					"title": "Properties",
					"children": [
						2052,
						2000
					]
				},
				{
					"title": "Methods",
					"children": [
						2074,
						2055,
						2071,
						2060,
						2053,
						2077,
						2069,
						2065,
						2067,
						2063,
						2029,
						2024,
						2044,
						2005,
						2010,
						2017,
						2034,
						2012,
						2019,
						2039,
						2001
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/types/sibling_path.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L6"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "CircuitValue",
					"qualifiedName": "CircuitValue",
					"package": "o1js"
				}
			]
		},
		{
			"id": 1370,
			"name": "CSMTUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collection of utility functions for compact sparse merkle tree"
					}
				]
			},
			"children": [
				{
					"id": 1454,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1455,
							"name": "new CSMTUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1370,
								"name": "CSMTUtils"
							}
						}
					]
				},
				{
					"id": 1404,
					"name": "checkMemebership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 290,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L290"
						}
					],
					"signatures": [
						{
							"id": 1405,
							"name": "checkMemebership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if the value is in the tree and it is at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1406,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1407,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1408,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								},
								{
									"id": 1409,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1410,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1406,
										"name": "K"
									}
								},
								{
									"id": 1411,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1406,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1412,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1407,
										"name": "V"
									}
								},
								{
									"id": 1413,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1407,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1414,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1415,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1417,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 297,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L297"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1418,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 297,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L297"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1416,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 297,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L297"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1417,
														1418,
														1416
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/proofs.ts",
													"line": 297,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L297"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1419,
					"name": "checkNonMemebership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 332,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L332"
						}
					],
					"signatures": [
						{
							"id": 1420,
							"name": "checkNonMemebership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if there is no value at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1421,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1422,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1423,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								},
								{
									"id": 1424,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1425,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1421,
										"name": "K"
									}
								},
								{
									"id": 1426,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1421,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1427,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1428,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1430,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 337,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L337"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1429,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 337,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L337"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1430,
														1429
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/proofs.ts",
													"line": 337,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L337"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1446,
					"name": "compactProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 413,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L413"
						}
					],
					"signatures": [
						{
							"id": 1447,
							"name": "compactProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Compact proof Of Compact Sparse Merkle Tree"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{CSparseCompactMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CSMTUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1448,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								},
								{
									"id": 1449,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reference",
								"id": 1456,
								"name": "CSparseCompactMerkleProof"
							}
						}
					]
				},
				{
					"id": 1450,
					"name": "decompactProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 455,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L455"
						}
					],
					"signatures": [
						{
							"id": 1451,
							"name": "decompactProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decompact compact proof of Compact Sparse Merkle Tree"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{CompactSparseMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CSMTUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1452,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1456,
										"name": "CSparseCompactMerkleProof"
									}
								},
								{
									"id": 1453,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reference",
								"id": 1273,
								"name": "CompactSparseMerkleProof"
							}
						}
					]
				},
				{
					"id": 1371,
					"name": "verifyCompactProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 100,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L100"
						}
					],
					"signatures": [
						{
							"id": 1372,
							"name": "verifyCompactProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify Compact Proof for Compact Sparse Merkle Tree"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1373,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1374,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1375,
									"name": "cproof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1456,
										"name": "CSparseCompactMerkleProof"
									}
								},
								{
									"id": 1376,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1377,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1373,
										"name": "K"
									}
								},
								{
									"id": 1378,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1373,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1379,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1374,
										"name": "V"
									}
								},
								{
									"id": 1380,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1374,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1381,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1382,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1384,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 107,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L107"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1385,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 107,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L107"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1383,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 107,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L107"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1384,
														1385,
														1383
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/proofs.ts",
													"line": 107,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L107"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1431,
					"name": "verifyProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 379,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L379"
						}
					],
					"signatures": [
						{
							"id": 1432,
							"name": "verifyProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify Proof of Compact Sparse Merkle Tree"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1433,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1434,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1435,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								},
								{
									"id": 1436,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1437,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1433,
										"name": "K"
									}
								},
								{
									"id": 1438,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1433,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1439,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1434,
										"name": "V"
									}
								},
								{
									"id": 1440,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1434,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1441,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1442,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1444,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 386,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L386"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1445,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 386,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L386"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1443,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 386,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L386"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1444,
														1445,
														1443
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/proofs.ts",
													"line": 386,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L386"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1386,
					"name": "verifyProofWithUpdates",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 150,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L150"
						}
					],
					"signatures": [
						{
							"id": 1387,
							"name": "verifyProofWithUpdates",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify a merkle proof, return result and updates."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{({\r\n    ok: boolean;\r\n    updates: [Field, Field[]][] | null;\r\n  })}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1388,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1389,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1390,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								},
								{
									"id": 1391,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1392,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1388,
										"name": "K"
									}
								},
								{
									"id": 1393,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1388,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1394,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1389,
										"name": "V"
									}
								},
								{
									"id": 1395,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1389,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1396,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1397,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1399,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 157,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L157"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1400,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 157,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L157"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1398,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 157,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L157"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1399,
														1400,
														1398
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/proofs.ts",
													"line": 157,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L157"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1401,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1402,
											"name": "ok",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/proofs.ts",
													"line": 163,
													"character": 4,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L163"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1403,
											"name": "updates",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/proofs.ts",
													"line": 164,
													"character": 4,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L164"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "reference",
																		"name": "Field",
																		"qualifiedName": "Field",
																		"package": "o1js"
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1402,
												1403
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/compact_smt/proofs.ts",
											"line": 162,
											"character": 5,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L162"
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1454
					]
				},
				{
					"title": "Methods",
					"children": [
						1404,
						1419,
						1446,
						1450,
						1371,
						1431,
						1386
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/compact_smt/proofs.ts",
					"line": 77,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L77"
				}
			]
		},
		{
			"id": 1463,
			"name": "CompactDeepSparseMerkleSubTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is used to compute new roots for state transitions based on sideNodes."
					}
				]
			},
			"children": [
				{
					"id": 1476,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/deep_subtree.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/deep_subtree.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 1477,
							"name": "new CompactDeepSparseMerkleSubTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of CompactDeepSparseMerkleSubTree."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactDeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1478,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1479,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1480,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1479,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 1481,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1482,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1478,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1483,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1479,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1484,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1485,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1487,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/deep_subtree.ts",
															"line": 41,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/deep_subtree.ts#L41"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1488,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/deep_subtree.ts",
															"line": 41,
															"character": 51,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/deep_subtree.ts#L41"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1486,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/deep_subtree.ts",
															"line": 41,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/deep_subtree.ts#L41"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1487,
														1488,
														1486
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/deep_subtree.ts",
													"line": 41,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/deep_subtree.ts#L41"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 1463,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1478,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 1479,
										"name": "V"
									}
								],
								"name": "CompactDeepSparseMerkleSubTree"
							},
							"overwrites": {
								"type": "reference",
								"id": 1105,
								"name": "CompactSparseMerkleTree.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 1104,
						"name": "CompactSparseMerkleTree.constructor"
					}
				},
				{
					"id": 1497,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 27,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L27"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1498,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1499,
									"name": "hashKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/compact_smt/csmt.ts",
											"line": 27,
											"character": 22,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L27"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1500,
									"name": "hashValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/compact_smt/csmt.ts",
											"line": 27,
											"character": 40,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L27"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1499,
										1500
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/compact_smt/csmt.ts",
									"line": 27,
									"character": 20,
									"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L27"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1120,
						"name": "CompactSparseMerkleTree.config"
					}
				},
				{
					"id": 1501,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 28,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1478,
								"name": "K"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1124,
						"name": "CompactSparseMerkleTree.keyType"
					}
				},
				{
					"id": 1496,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 26,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1119,
						"name": "CompactSparseMerkleTree.root"
					}
				},
				{
					"id": 1495,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 25,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L25"
						}
					],
					"type": {
						"type": "reference",
						"id": 5,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1479,
								"name": "V"
							}
						],
						"name": "Store"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1118,
						"name": "CompactSparseMerkleTree.store"
					}
				},
				{
					"id": 1494,
					"name": "th",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 24,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L24"
						}
					],
					"type": {
						"type": "reference",
						"id": 1209,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1478,
								"name": "K"
							},
							{
								"type": "reference",
								"id": 1479,
								"name": "V"
							}
						],
						"name": "TreeHasher"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1117,
						"name": "CompactSparseMerkleTree.th"
					}
				},
				{
					"id": 1502,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 29,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1479,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 1125,
						"name": "CompactSparseMerkleTree.valueType"
					}
				},
				{
					"id": 1489,
					"name": "addBranch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/deep_subtree.ts",
							"line": 58,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/deep_subtree.ts#L58"
						}
					],
					"signatures": [
						{
							"id": 1490,
							"name": "addBranch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a branch to the tree, a branch is generated by smt.prove."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactDeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1491,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								},
								{
									"id": 1492,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								},
								{
									"id": 1493,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1479,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1517,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 207,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L207"
						}
					],
					"signatures": [
						{
							"id": 1518,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1141,
								"name": "CompactSparseMerkleTree.clear"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1140,
						"name": "CompactSparseMerkleTree.clear"
					}
				},
				{
					"id": 1535,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 287,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L287"
						}
					],
					"signatures": [
						{
							"id": 1536,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1537,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1159,
								"name": "CompactSparseMerkleTree.delete"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1158,
						"name": "CompactSparseMerkleTree.delete"
					}
				},
				{
					"id": 1515,
					"name": "depth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 197,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L197"
						}
					],
					"signatures": [
						{
							"id": 1516,
							"name": "depth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the depth of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{number}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1139,
								"name": "CompactSparseMerkleTree.depth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1138,
						"name": "CompactSparseMerkleTree.depth"
					}
				},
				{
					"id": 1519,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 218,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L218"
						}
					],
					"signatures": [
						{
							"id": 1520,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for a key from the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{(Promise<V | null>)}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1521,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1479,
												"name": "V"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1143,
								"name": "CompactSparseMerkleTree.get"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1142,
						"name": "CompactSparseMerkleTree.get"
					}
				},
				{
					"id": 1503,
					"name": "getKeyField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 130,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 1504,
							"name": "getKeyField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1505,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1127,
								"name": "CompactSparseMerkleTree.getKeyField"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1126,
						"name": "CompactSparseMerkleTree.getKeyField"
					}
				},
				{
					"id": 1506,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 153,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L153"
						}
					],
					"signatures": [
						{
							"id": 1507,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1130,
								"name": "CompactSparseMerkleTree.getRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1129,
						"name": "CompactSparseMerkleTree.getRoot"
					}
				},
				{
					"id": 1510,
					"name": "getStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 173,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L173"
						}
					],
					"signatures": [
						{
							"id": 1511,
							"name": "getStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the data store of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Store<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 5,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1479,
										"name": "V"
									}
								],
								"name": "Store"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1134,
								"name": "CompactSparseMerkleTree.getStore"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1133,
						"name": "CompactSparseMerkleTree.getStore"
					}
				},
				{
					"id": 1508,
					"name": "getTreeHasher",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 163,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 1509,
							"name": "getTreeHasher",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the tree hasher used by the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{TreeHasher<K, V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 1209,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1478,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 1479,
										"name": "V"
									}
								],
								"name": "TreeHasher"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1132,
								"name": "CompactSparseMerkleTree.getTreeHasher"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1131,
						"name": "CompactSparseMerkleTree.getTreeHasher"
					}
				},
				{
					"id": 1522,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 234,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 1523,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the key exists in the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<boolean>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1524,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1146,
								"name": "CompactSparseMerkleTree.has"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1145,
						"name": "CompactSparseMerkleTree.has"
					}
				},
				{
					"id": 1538,
					"name": "prove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 298,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L298"
						}
					],
					"signatures": [
						{
							"id": 1539,
							"name": "prove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CSparseMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1540,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1162,
								"name": "CompactSparseMerkleTree.prove"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1161,
						"name": "CompactSparseMerkleTree.prove"
					}
				},
				{
					"id": 1544,
					"name": "proveCompact",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 320,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L320"
						}
					],
					"signatures": [
						{
							"id": 1545,
							"name": "proveCompact",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a compacted merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CSparseCompactMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1546,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1456,
										"name": "CSparseCompactMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1168,
								"name": "CompactSparseMerkleTree.proveCompact"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1167,
						"name": "CompactSparseMerkleTree.proveCompact"
					}
				},
				{
					"id": 1541,
					"name": "proveUpdatable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 309,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L309"
						}
					],
					"signatures": [
						{
							"id": 1542,
							"name": "proveUpdatable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create an updatable Merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CSparseMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1543,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1165,
								"name": "CompactSparseMerkleTree.proveUpdatable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1164,
						"name": "CompactSparseMerkleTree.proveUpdatable"
					}
				},
				{
					"id": 1512,
					"name": "setRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 184,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L184"
						}
					],
					"signatures": [
						{
							"id": 1513,
							"name": "setRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1514,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1136,
								"name": "CompactSparseMerkleTree.setRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1135,
						"name": "CompactSparseMerkleTree.setRoot"
					}
				},
				{
					"id": 1525,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 251,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L251"
						}
					],
					"signatures": [
						{
							"id": 1526,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update a new value for a key in the tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1527,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1478,
										"name": "K"
									}
								},
								{
									"id": 1528,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1479,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1149,
								"name": "CompactSparseMerkleTree.update"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1148,
						"name": "CompactSparseMerkleTree.update"
					}
				},
				{
					"id": 1529,
					"name": "updateAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 267,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L267"
						}
					],
					"signatures": [
						{
							"id": 1530,
							"name": "updateAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update multiple leaves and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1531,
									"name": "kvs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1532,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 1533,
														"name": "key",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/lib/compact_smt/csmt.ts",
																"line": 267,
																"character": 25,
																"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L267"
															}
														],
														"type": {
															"type": "reference",
															"id": 1478,
															"name": "K"
														}
													},
													{
														"id": 1534,
														"name": "value",
														"kind": 1024,
														"kindString": "Property",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "src/lib/compact_smt/csmt.ts",
																"line": 267,
																"character": 33,
																"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L267"
															}
														],
														"type": {
															"type": "reference",
															"id": 1479,
															"name": "V"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1533,
															1534
														]
													}
												],
												"sources": [
													{
														"fileName": "src/lib/compact_smt/csmt.ts",
														"line": 267,
														"character": 23,
														"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L267"
													}
												]
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1153,
								"name": "CompactSparseMerkleTree.updateAll"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1152,
						"name": "CompactSparseMerkleTree.updateAll"
					}
				},
				{
					"id": 1464,
					"name": "import",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 101,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L101"
						}
					],
					"signatures": [
						{
							"id": 1465,
							"name": "import",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Import a compacted sparse merkle tree"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CompactSparseMerkleTree<K, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1466,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1467,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1468,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1095,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 1469,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1094,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1470,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1095,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1471,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1472,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1474,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 105,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L105"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1475,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 105,
															"character": 51,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L105"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1473,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 105,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L105"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1474,
														1475,
														1473
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/csmt.ts",
													"line": 105,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L105"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1091,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1094,
												"name": "K"
											},
											{
												"type": "reference",
												"id": 1095,
												"name": "V"
											}
										],
										"name": "CompactSparseMerkleTree"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1093,
								"name": "CompactSparseMerkleTree.import"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1092,
						"name": "CompactSparseMerkleTree.import"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1476
					]
				},
				{
					"title": "Properties",
					"children": [
						1497,
						1501,
						1496,
						1495,
						1494,
						1502
					]
				},
				{
					"title": "Methods",
					"children": [
						1489,
						1517,
						1535,
						1515,
						1519,
						1503,
						1506,
						1510,
						1508,
						1522,
						1538,
						1544,
						1541,
						1512,
						1525,
						1529,
						1464
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/compact_smt/deep_subtree.ts",
					"line": 17,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/deep_subtree.ts#L17"
				}
			],
			"typeParameters": [
				{
					"id": 1547,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1548,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1091,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1478,
							"name": "K"
						},
						{
							"type": "reference",
							"id": 1479,
							"name": "V"
						}
					],
					"name": "CompactSparseMerkleTree"
				}
			]
		},
		{
			"id": 1273,
			"name": "CompactSparseMerkleProof",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Proof for compact sparse merkle tree"
					}
				]
			},
			"children": [
				{
					"id": 1358,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 1359,
							"name": "new CompactSparseMerkleProof",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1360,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1361,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1363,
													"name": "nonMembershipLeafData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 36,
															"character": 4,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L36"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												},
												{
													"id": 1365,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 38,
															"character": 4,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L38"
														}
													],
													"type": {
														"type": "reference",
														"name": "Field",
														"qualifiedName": "Field",
														"package": "o1js"
													}
												},
												{
													"id": 1364,
													"name": "siblingData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 37,
															"character": 4,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L37"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												},
												{
													"id": 1362,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 35,
															"character": 4,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L35"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1363,
														1365,
														1364,
														1362
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/proofs.ts",
													"line": 34,
													"character": 21,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L34"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1273,
								"name": "CompactSparseMerkleProof"
							},
							"overwrites": {
								"type": "reference",
								"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).constructor"
					}
				},
				{
					"id": 1367,
					"name": "nonMembershipLeafData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).nonMembershipLeafData"
					}
				},
				{
					"id": 1369,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 32,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					},
					"defaultValue": "Field",
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).root"
					}
				},
				{
					"id": 1368,
					"name": "siblingData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).siblingData"
					}
				},
				{
					"id": 1366,
					"name": "sideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).sideNodes"
					}
				},
				{
					"id": 1279,
					"name": "_isStruct",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 125,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": true
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n})._isStruct"
					}
				},
				{
					"id": 1309,
					"name": "check",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 156,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1310,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
									"line": 156,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 1311,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Add assertions to the proof to check if "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is a valid member of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ".\nThis function does not return anything, rather creates any number of assertions on the proof to prove "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is a valid member of the type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ".\n\nFor instance, calling check function on the type "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Bool"
											},
											{
												"kind": "text",
												"text": " asserts that the value of the element is either 1 or 0."
											}
										]
									},
									"parameters": [
										{
											"id": 1312,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the element of type "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " to put assertions on."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1313,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1315,
															"name": "nonMembershipLeafData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 30,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1317,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 32,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 1316,
															"name": "siblingData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 31,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1314,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 29,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1315,
																1317,
																1316,
																1314
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).check"
					}
				},
				{
					"id": 1298,
					"name": "fromFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1299,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
									"line": 137,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1300,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": " from the given provable data.\n\n**Important**: For any element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ", this function is the reverse operation of calling "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "toFields",
												"target": 1280
											},
											{
												"kind": "text",
												"text": " method on an element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An element of type "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " generated from the given provable data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1301,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an array of "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Field"
													},
													{
														"kind": "text",
														"text": " elements describing the provable data of the new "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " element."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Field",
													"qualifiedName": "Field",
													"package": "o1js"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1302,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1304,
													"name": "nonMembershipLeafData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 30,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 1306,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 32,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
														}
													],
													"type": {
														"type": "reference",
														"name": "Field",
														"qualifiedName": "Field",
														"package": "o1js"
													},
													"defaultValue": "Field"
												},
												{
													"id": 1305,
													"name": "siblingData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 31,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 1303,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 29,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1304,
														1306,
														1305,
														1303
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
													"line": 42,
													"character": 78
												}
											]
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).fromFields"
					}
				},
				{
					"id": 1344,
					"name": "fromJSON",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 132,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1345,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
									"line": 132,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1346,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1347,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1348,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1350,
															"name": "nonMembershipLeafData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 30,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1352,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 32,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "Field"
														},
														{
															"id": 1351,
															"name": "siblingData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 31,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1349,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 29,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1350,
																1352,
																1351,
																1349
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 50,
															"character": 71
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1353,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1355,
													"name": "nonMembershipLeafData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 30,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 1357,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 32,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
														}
													],
													"type": {
														"type": "reference",
														"name": "Field",
														"qualifiedName": "Field",
														"package": "o1js"
													},
													"defaultValue": "Field"
												},
												{
													"id": 1356,
													"name": "siblingData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 31,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 1354,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 29,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1355,
														1357,
														1356,
														1354
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
													"line": 42,
													"character": 78
												}
											]
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).fromJSON"
					}
				},
				{
					"id": 1289,
					"name": "toAuxiliary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1290,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
									"line": 126,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1291,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that takes "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " (optional), an element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ", as argument and returns an array of any type that make up the \"auxiliary\" (non-provable) data of "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ".\nAs any element of the interface "
											},
											{
												"kind": "code",
												"text": "`ProvablePure<T>`"
											},
											{
												"kind": "text",
												"text": " includes no \"auxiliary\" data by definition, this function always returns a default value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An empty array, as any element of the interface "
													},
													{
														"kind": "code",
														"text": "`ProvablePure<T>`"
													},
													{
														"kind": "text",
														"text": " includes no \"auxiliary\" data by definition."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1292,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the element of type "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " to generate the auxiliary data array from, optional. If not provided, a default value for auxiliary data is returned."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1293,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1295,
															"name": "nonMembershipLeafData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 30,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1297,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 32,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 1296,
															"name": "siblingData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 31,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1294,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 29,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1295,
																1297,
																1296,
																1294
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).toAuxiliary"
					}
				},
				{
					"id": 1280,
					"name": "toFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 116,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1281,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
									"line": 116,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1282,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that takes "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ", an element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ", as argument and returns an array of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Field"
											},
											{
												"kind": "text",
												"text": " elements that make up the provable data of "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Field"
													},
													{
														"kind": "text",
														"text": " array describing how this "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " element is made up of "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Field"
													},
													{
														"kind": "text",
														"text": " elements."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 1283,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the element of type "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " to generate the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Field"
													},
													{
														"kind": "text",
														"text": " array from."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1284,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1286,
															"name": "nonMembershipLeafData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 30,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1288,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 32,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 1287,
															"name": "siblingData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 31,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1285,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 29,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1286,
																1288,
																1287,
																1285
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).toFields"
					}
				},
				{
					"id": 1318,
					"name": "toInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 127,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1319,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
									"line": 127,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 1320,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1321,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1322,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1324,
															"name": "nonMembershipLeafData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 30,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1326,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 32,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 1325,
															"name": "siblingData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 31,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1323,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 29,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1324,
																1326,
																1325,
																1323
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1327,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1328,
													"name": "fields",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
															"line": 128,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												},
												{
													"id": 1329,
													"name": "packed",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
															"line": 129,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1328,
														1329
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
													"line": 127,
													"character": 23
												}
											]
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).toInput"
					}
				},
				{
					"id": 1330,
					"name": "toJSON",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 131,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1331,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
									"line": 131,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1332,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1333,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1334,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 1336,
															"name": "nonMembershipLeafData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 30,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1338,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 32,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 1337,
															"name": "siblingData",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 31,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1335,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/compact_smt/proofs.ts",
																	"line": 29,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1336,
																1338,
																1337,
																1335
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1339,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1341,
													"name": "nonMembershipLeafData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 30,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 1343,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 32,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "Field"
												},
												{
													"id": 1342,
													"name": "siblingData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 31,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 1340,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/proofs.ts",
															"line": 29,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1341,
														1343,
														1342,
														1340
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
													"line": 50,
													"character": 71
												}
											]
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).toJSON"
					}
				},
				{
					"id": 1307,
					"name": "sizeInFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 146,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1308,
							"name": "sizeInFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return the size of the "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " type in terms of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field"
									},
									{
										"kind": "text",
										"text": " type, as "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field"
									},
									{
										"kind": "text",
										"text": " is the primitive type.\n\n**Warning**: This function returns a "
									},
									{
										"kind": "code",
										"text": "`number`"
									},
									{
										"kind": "text",
										"text": ", so you cannot use it to prove something on chain. You can use it during debugging or to understand the memory complexity of some type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " representing the size of the "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": " type in terms of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Field"
											},
											{
												"kind": "text",
												"text": " type."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).sizeInFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, CSMT_DEPTH),\r\n  nonMembershipLeafData: Circuit.array(Field, 3),\r\n  siblingData: Circuit.array(Field, 3),\r\n  root: Field,\r\n}).sizeInFields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1358
					]
				},
				{
					"title": "Properties",
					"children": [
						1367,
						1369,
						1368,
						1366,
						1279,
						1309,
						1298,
						1344,
						1289,
						1280,
						1318,
						1330
					]
				},
				{
					"title": "Methods",
					"children": [
						1307
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/compact_smt/proofs.ts",
					"line": 28,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L28"
				}
			],
			"extendedTypes": [
				{
					"type": "reflection",
					"declaration": {
						"id": 1274,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {},
						"children": [
							{
								"id": 1276,
								"name": "nonMembershipLeafData",
								"kind": 1024,
								"kindString": "Property",
								"flags": {},
								"sources": [
									{
										"fileName": "src/lib/compact_smt/proofs.ts",
										"line": 30,
										"character": 2,
										"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L30"
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								"defaultValue": "..."
							},
							{
								"id": 1278,
								"name": "root",
								"kind": 1024,
								"kindString": "Property",
								"flags": {},
								"sources": [
									{
										"fileName": "src/lib/compact_smt/proofs.ts",
										"line": 32,
										"character": 2,
										"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L32"
									}
								],
								"type": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								},
								"defaultValue": "Field"
							},
							{
								"id": 1277,
								"name": "siblingData",
								"kind": 1024,
								"kindString": "Property",
								"flags": {},
								"sources": [
									{
										"fileName": "src/lib/compact_smt/proofs.ts",
										"line": 31,
										"character": 2,
										"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L31"
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								"defaultValue": "..."
							},
							{
								"id": 1275,
								"name": "sideNodes",
								"kind": 1024,
								"kindString": "Property",
								"flags": {},
								"sources": [
									{
										"fileName": "src/lib/compact_smt/proofs.ts",
										"line": 29,
										"character": 2,
										"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L29"
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								"defaultValue": "..."
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									1276,
									1278,
									1277,
									1275
								]
							}
						],
						"sources": [
							{
								"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
								"line": 42,
								"character": 78
							}
						]
					}
				}
			]
		},
		{
			"id": 1091,
			"name": "CompactSparseMerkleTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Compact Sparse Merkle Tree"
					}
				]
			},
			"children": [
				{
					"id": 1104,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 46,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L46"
						}
					],
					"signatures": [
						{
							"id": 1105,
							"name": "new CompactSparseMerkleTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of CompactSparseMerkleTree."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1106,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1107,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1108,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1107,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 1109,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1106,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1110,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1107,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1111,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1112,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1113,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1115,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 51,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L51"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1116,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 51,
															"character": 51,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L51"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1114,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 51,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L51"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1115,
														1116,
														1114
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/csmt.ts",
													"line": 51,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L51"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 1091,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1106,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "V"
									}
								],
								"name": "CompactSparseMerkleTree"
							}
						}
					]
				},
				{
					"id": 1120,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 27,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L27"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1121,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1122,
									"name": "hashKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/compact_smt/csmt.ts",
											"line": 27,
											"character": 22,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L27"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1123,
									"name": "hashValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/compact_smt/csmt.ts",
											"line": 27,
											"character": 40,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L27"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1122,
										1123
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/compact_smt/csmt.ts",
									"line": 27,
									"character": 20,
									"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L27"
								}
							]
						}
					}
				},
				{
					"id": 1124,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 28,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1106,
								"name": "K"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 1119,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 26,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 1118,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 25,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L25"
						}
					],
					"type": {
						"type": "reference",
						"id": 5,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1107,
								"name": "V"
							}
						],
						"name": "Store"
					}
				},
				{
					"id": 1117,
					"name": "th",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 24,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L24"
						}
					],
					"type": {
						"type": "reference",
						"id": 1209,
						"typeArguments": [
							{
								"type": "reference",
								"id": 1106,
								"name": "K"
							},
							{
								"type": "reference",
								"id": 1107,
								"name": "V"
							}
						],
						"name": "TreeHasher"
					}
				},
				{
					"id": 1125,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 29,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1107,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 1140,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 207,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L207"
						}
					],
					"signatures": [
						{
							"id": 1141,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1158,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 287,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L287"
						}
					],
					"signatures": [
						{
							"id": 1159,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1160,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1191,
					"name": "deleteWithSideNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 524,
							"character": 16,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L524"
						}
					],
					"signatures": [
						{
							"id": 1192,
							"name": "deleteWithSideNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1193,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1194,
									"name": "sideNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 1195,
									"name": "pathNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 1196,
									"name": "oldLeafData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1138,
					"name": "depth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 197,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L197"
						}
					],
					"signatures": [
						{
							"id": 1139,
							"name": "depth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the depth of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{number}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1174,
					"name": "doProveForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 332,
							"character": 16,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L332"
						}
					],
					"signatures": [
						{
							"id": 1175,
							"name": "doProveForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1176,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1177,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								},
								{
									"id": 1178,
									"name": "isUpdatable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1142,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 218,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L218"
						}
					],
					"signatures": [
						{
							"id": 1143,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for a key from the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{(Promise<V | null>)}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1144,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1107,
												"name": "V"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1126,
					"name": "getKeyField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 130,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 1127,
							"name": "getKeyField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1128,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1129,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 153,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L153"
						}
					],
					"signatures": [
						{
							"id": 1130,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1133,
					"name": "getStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 173,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L173"
						}
					],
					"signatures": [
						{
							"id": 1134,
							"name": "getStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the data store of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Store<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 5,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1107,
										"name": "V"
									}
								],
								"name": "Store"
							}
						}
					]
				},
				{
					"id": 1131,
					"name": "getTreeHasher",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 163,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 1132,
							"name": "getTreeHasher",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the tree hasher used by the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{TreeHasher<K, V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 1209,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1106,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 1107,
										"name": "V"
									}
								],
								"name": "TreeHasher"
							}
						}
					]
				},
				{
					"id": 1145,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 234,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 1146,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the key exists in the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<boolean>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1147,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1161,
					"name": "prove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 298,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L298"
						}
					],
					"signatures": [
						{
							"id": 1162,
							"name": "prove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CSparseMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1163,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1167,
					"name": "proveCompact",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 320,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L320"
						}
					],
					"signatures": [
						{
							"id": 1168,
							"name": "proveCompact",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a compacted merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CSparseCompactMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1169,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1456,
										"name": "CSparseCompactMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1170,
					"name": "proveCompactForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 324,
							"character": 16,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L324"
						}
					],
					"signatures": [
						{
							"id": 1171,
							"name": "proveCompactForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1172,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1173,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1456,
										"name": "CSparseCompactMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1164,
					"name": "proveUpdatable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 309,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L309"
						}
					],
					"signatures": [
						{
							"id": 1165,
							"name": "proveUpdatable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create an updatable Merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CSparseMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1166,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1135,
					"name": "setRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 184,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L184"
						}
					],
					"signatures": [
						{
							"id": 1136,
							"name": "setRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1137,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1197,
					"name": "sideNodesForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 586,
							"character": 16,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L586"
						}
					],
					"signatures": [
						{
							"id": 1198,
							"name": "sideNodesForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1199,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1200,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1201,
									"name": "getSiblingData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1202,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1205,
													"name": "currentData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 593,
															"character": 4,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L593"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															}
														]
													}
												},
												{
													"id": 1204,
													"name": "pathNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 592,
															"character": 4,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L592"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												},
												{
													"id": 1206,
													"name": "siblingData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 594,
															"character": 4,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L594"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															}
														]
													}
												},
												{
													"id": 1203,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 591,
															"character": 4,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L591"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1205,
														1204,
														1206,
														1203
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/csmt.ts",
													"line": 590,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L590"
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1148,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 251,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L251"
						}
					],
					"signatures": [
						{
							"id": 1149,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update a new value for a key in the tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1150,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								},
								{
									"id": 1151,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1107,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1152,
					"name": "updateAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 267,
							"character": 8,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L267"
						}
					],
					"signatures": [
						{
							"id": 1153,
							"name": "updateAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update multiple leaves and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1154,
									"name": "kvs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1155,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 1156,
														"name": "key",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/lib/compact_smt/csmt.ts",
																"line": 267,
																"character": 25,
																"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L267"
															}
														],
														"type": {
															"type": "reference",
															"id": 1106,
															"name": "K"
														}
													},
													{
														"id": 1157,
														"name": "value",
														"kind": 1024,
														"kindString": "Property",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "src/lib/compact_smt/csmt.ts",
																"line": 267,
																"character": 33,
																"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L267"
															}
														],
														"type": {
															"type": "reference",
															"id": 1107,
															"name": "V"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1156,
															1157
														]
													}
												],
												"sources": [
													{
														"fileName": "src/lib/compact_smt/csmt.ts",
														"line": 267,
														"character": 23,
														"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L267"
													}
												]
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1179,
					"name": "updateForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 366,
							"character": 16,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L366"
						}
					],
					"signatures": [
						{
							"id": 1180,
							"name": "updateForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1181,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1182,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1106,
										"name": "K"
									}
								},
								{
									"id": 1183,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1107,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1184,
					"name": "updateWithSideNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 407,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L407"
						}
					],
					"signatures": [
						{
							"id": 1185,
							"name": "updateWithSideNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1186,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1187,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1107,
										"name": "V"
									}
								},
								{
									"id": 1188,
									"name": "sideNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 1189,
									"name": "pathNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 1190,
									"name": "oldLeafData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1092,
					"name": "import",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/csmt.ts",
							"line": 101,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L101"
						}
					],
					"signatures": [
						{
							"id": 1093,
							"name": "import",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Import a compacted sparse merkle tree"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CompactSparseMerkleTree<K, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "CompactSparseMerkleTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1094,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1095,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1096,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1095,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 1097,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1094,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1098,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1095,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1099,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1100,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1102,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 105,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L105"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1103,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 105,
															"character": 51,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L105"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1101,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/csmt.ts",
															"line": 105,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L105"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1102,
														1103,
														1101
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/csmt.ts",
													"line": 105,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L105"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1091,
										"typeArguments": [
											{
												"type": "reference",
												"id": 1094,
												"name": "K"
											},
											{
												"type": "reference",
												"id": 1095,
												"name": "V"
											}
										],
										"name": "CompactSparseMerkleTree"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1104
					]
				},
				{
					"title": "Properties",
					"children": [
						1120,
						1124,
						1119,
						1118,
						1117,
						1125
					]
				},
				{
					"title": "Methods",
					"children": [
						1140,
						1158,
						1191,
						1138,
						1174,
						1142,
						1126,
						1129,
						1133,
						1131,
						1145,
						1161,
						1167,
						1170,
						1164,
						1135,
						1197,
						1148,
						1152,
						1179,
						1184,
						1092
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/compact_smt/csmt.ts",
					"line": 23,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/csmt.ts#L23"
				}
			],
			"typeParameters": [
				{
					"id": 1207,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1208,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1463,
					"name": "CompactDeepSparseMerkleSubTree"
				}
			]
		},
		{
			"id": 1010,
			"name": "DeepMerkleSubTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DeepMerkleSubTree is a deep merkle subtree for working on only a few leafs."
					}
				]
			},
			"children": [
				{
					"id": 1011,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 1012,
							"name": "new DeepMerkleSubTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of DeepMerkleSubTree."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepMerkleSubTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1013,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1014,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1015,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1016,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1013,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1017,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1018,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1020,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/deep_subtree.ts",
															"line": 40,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L40"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1019,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/deep_subtree.ts",
															"line": 40,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L40"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1020,
														1019
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/deep_subtree.ts",
													"line": 40,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L40"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 1010,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1013,
										"name": "V"
									}
								],
								"name": "DeepMerkleSubTree"
							}
						}
					]
				},
				{
					"id": 1026,
					"name": "hashValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 21,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1025,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 20,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Hasher"
					}
				},
				{
					"id": 1024,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 19,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1021,
					"name": "nodeStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 16,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 1023,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 18,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 1022,
					"name": "valueStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 17,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 1027,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 22,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1013,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 1039,
					"name": "addBranch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 117,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L117"
						}
					],
					"signatures": [
						{
							"id": 1040,
							"name": "addBranch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a branch to the tree, a branch is generated by smt.prove."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1041,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 1042,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1043,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1013,
										"name": "V"
									}
								},
								{
									"id": 1044,
									"name": "ignoreInvalidProof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1030,
					"name": "getHeight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 70,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 1031,
							"name": "getHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get height of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{number}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepMerkleSubTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1028,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 60,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L60"
						}
					],
					"signatures": [
						{
							"id": 1029,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepMerkleSubTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1032,
					"name": "getValueField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 74,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 1033,
							"name": "getValueField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1034,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1013,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1035,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 95,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L95"
						}
					],
					"signatures": [
						{
							"id": 1036,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check whether there is a corresponding key and value in the tree"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1037,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1038,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1013,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1045,
					"name": "prove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 159,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L159"
						}
					],
					"signatures": [
						{
							"id": 1046,
							"name": "prove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{BaseMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1047,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 841,
								"name": "BaseMerkleProof"
							}
						}
					]
				},
				{
					"id": 1048,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree.ts",
							"line": 203,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L203"
						}
					],
					"signatures": [
						{
							"id": 1049,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update a new value for a key in the tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1050,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1051,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1013,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1011
					]
				},
				{
					"title": "Properties",
					"children": [
						1026,
						1025,
						1024,
						1021,
						1023,
						1022,
						1027
					]
				},
				{
					"title": "Methods",
					"children": [
						1039,
						1030,
						1028,
						1032,
						1035,
						1045,
						1048
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/merkle/deep_subtree.ts",
					"line": 15,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 1052,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 601,
			"name": "DeepSparseMerkleSubTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DeepSparseMerkleSubTree is a deep sparse merkle subtree for working on only a few leafs."
					}
				]
			},
			"children": [
				{
					"id": 602,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 603,
							"name": "new DeepSparseMerkleSubTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of DeepSparseMerkleSubTree."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 604,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 605,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 606,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "merkle root"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 607,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 604,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 608,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 605,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 609,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 610,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 612,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/deep_subtree.ts",
															"line": 41,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L41"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 613,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/deep_subtree.ts",
															"line": 41,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L41"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 611,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/deep_subtree.ts",
															"line": 41,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L41"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														612,
														613,
														611
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/deep_subtree.ts",
													"line": 41,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L41"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 601,
								"typeArguments": [
									{
										"type": "reference",
										"id": 604,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 605,
										"name": "V"
									}
								],
								"name": "DeepSparseMerkleSubTree"
							}
						}
					]
				},
				{
					"id": 618,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 19,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L19"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 619,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 620,
									"name": "hashKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/smt/deep_subtree.ts",
											"line": 19,
											"character": 20,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L19"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 621,
									"name": "hashValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/smt/deep_subtree.ts",
											"line": 19,
											"character": 38,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L19"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										620,
										621
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/smt/deep_subtree.ts",
									"line": 19,
									"character": 18,
									"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L19"
								}
							]
						}
					}
				},
				{
					"id": 617,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 18,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Hasher"
					}
				},
				{
					"id": 622,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 20,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 604,
								"name": "K"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 614,
					"name": "nodeStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 15,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L15"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 616,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 17,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 615,
					"name": "valueStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 16,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 623,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 21,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L21"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 605,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 638,
					"name": "addBranch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 126,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L126"
						}
					],
					"signatures": [
						{
							"id": 639,
							"name": "addBranch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a branch to the tree, a branch is generated by smt.prove."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 640,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								},
								{
									"id": 641,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 604,
										"name": "K"
									}
								},
								{
									"id": 642,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 605,
										"name": "V"
									}
								},
								{
									"id": 643,
									"name": "ignoreInvalidProof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "whether to throw an error when proof is invalid"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 626,
					"name": "getHeight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 72,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L72"
						}
					],
					"signatures": [
						{
							"id": 627,
							"name": "getHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get height of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{number}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 628,
					"name": "getKeyField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 76,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L76"
						}
					],
					"signatures": [
						{
							"id": 629,
							"name": "getKeyField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 630,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 604,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 624,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 62,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L62"
						}
					],
					"signatures": [
						{
							"id": 625,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 631,
					"name": "getValueField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 86,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L86"
						}
					],
					"signatures": [
						{
							"id": 632,
							"name": "getValueField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 633,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 605,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 634,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 105,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L105"
						}
					],
					"signatures": [
						{
							"id": 635,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check whether there is a corresponding key and value in the tree"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 636,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 604,
										"name": "K"
									}
								},
								{
									"id": 637,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 605,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 644,
					"name": "prove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 167,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L167"
						}
					],
					"signatures": [
						{
							"id": 645,
							"name": "prove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{SparseMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 646,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 604,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 431,
								"name": "SparseMerkleProof"
							}
						}
					]
				},
				{
					"id": 647,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree.ts",
							"line": 208,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L208"
						}
					],
					"signatures": [
						{
							"id": 648,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update a new value for a key in the tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "DeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 649,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 604,
										"name": "K"
									}
								},
								{
									"id": 650,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 605,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						602
					]
				},
				{
					"title": "Properties",
					"children": [
						618,
						617,
						622,
						614,
						616,
						615,
						623
					]
				},
				{
					"title": "Methods",
					"children": [
						638,
						626,
						628,
						624,
						631,
						634,
						644,
						647
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/smt/deep_subtree.ts",
					"line": 14,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree.ts#L14"
				}
			],
			"typeParameters": [
				{
					"id": 651,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 652,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 86,
			"name": "LevelStore",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Store based on leveldb"
					}
				],
				"blockTags": [
					{
						"tag": "@implements",
						"content": []
					}
				]
			},
			"children": [
				{
					"id": 87,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L47"
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "new LevelStore",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of LevelStore."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 89,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 90,
									"name": "db",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Level",
										"qualifiedName": "Level",
										"package": "level"
									}
								},
								{
									"id": 91,
									"name": "eltTyp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 89,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 92,
									"name": "smtName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 86,
								"typeArguments": [
									{
										"type": "reference",
										"id": 89,
										"name": "V"
									}
								],
								"name": "LevelStore"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "db",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 21,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L21"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Level",
						"qualifiedName": "Level",
						"package": "level"
					}
				},
				{
					"id": 97,
					"name": "eltTyp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 38,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L38"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 89,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 95,
					"name": "leavesSubLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 28,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Level",
								"qualifiedName": "Level",
								"package": "level"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"name": "Uint8Array",
										"qualifiedName": "Uint8Array",
										"package": "typescript"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "AbstractSublevel",
						"qualifiedName": "AbstractSublevel",
						"package": "abstract-level"
					}
				},
				{
					"id": 94,
					"name": "nodesSubLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 22,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Level",
								"qualifiedName": "Level",
								"package": "level"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									},
									{
										"type": "reference",
										"name": "Uint8Array",
										"qualifiedName": "Uint8Array",
										"package": "typescript"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "AbstractSublevel",
						"qualifiedName": "AbstractSublevel",
						"package": "abstract-level"
					}
				},
				{
					"id": 96,
					"name": "operationCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 34,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L34"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Level",
											"qualifiedName": "Level",
											"package": "level"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "AbstractBatchPutOperation",
									"qualifiedName": "AbstractBatchPutOperation",
									"package": "abstract-level"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Level",
											"qualifiedName": "Level",
											"package": "level"
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"name": "AbstractBatchDelOperation",
									"qualifiedName": "AbstractBatchDelOperation",
									"package": "abstract-level"
								}
							]
						}
					}
				},
				{
					"id": 134,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 224,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L224"
						}
					],
					"signatures": [
						{
							"id": 135,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the store."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 36,
								"name": "Store.clear"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 35,
						"name": "Store.clear"
					}
				},
				{
					"id": 98,
					"name": "clearPrepareOperationCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 60,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L60"
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "clearPrepareOperationCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all prepare operation cache."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 34,
								"name": "Store.clearPrepareOperationCache"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 33,
						"name": "Store.clearPrepareOperationCache"
					}
				},
				{
					"id": 132,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 210,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L210"
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use the commit() method to actually submit all prepare changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 32,
								"name": "Store.commit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 31,
						"name": "Store.commit"
					}
				},
				{
					"id": 105,
					"name": "getNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 97,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L97"
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "getNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get nodes for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field[]>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 107,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 7,
								"name": "Store.getNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 6,
						"name": "Store.getNodes"
					}
				},
				{
					"id": 100,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 70,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 101,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the tree root. Error is thrown when the root does not exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 27,
								"name": "Store.getRoot"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 26,
						"name": "Store.getRoot"
					}
				},
				{
					"id": 119,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 153,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L153"
						}
					],
					"signatures": [
						{
							"id": 120,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 121,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 89,
										"name": "V"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 17,
								"name": "Store.getValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 16,
						"name": "Store.getValue"
					}
				},
				{
					"id": 136,
					"name": "getValuesMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 235,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L235"
						}
					],
					"signatures": [
						{
							"id": 137,
							"name": "getValuesMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get values map, key is Field.toString()."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Map<string, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 89,
												"name": "V"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 38,
								"name": "Store.getValuesMap"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 37,
						"name": "Store.getValuesMap"
					}
				},
				{
					"id": 112,
					"name": "prepareDelNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 124,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L124"
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "prepareDelNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 114,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 14,
								"name": "Store.prepareDelNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 13,
						"name": "Store.prepareDelNodes"
					}
				},
				{
					"id": 129,
					"name": "prepareDelValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 196,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L196"
						}
					],
					"signatures": [
						{
							"id": 130,
							"name": "prepareDelValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 131,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 24,
								"name": "Store.prepareDelValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 23,
						"name": "Store.prepareDelValue"
					}
				},
				{
					"id": 108,
					"name": "preparePutNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 109,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "preparePutNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 110,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 111,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 10,
								"name": "Store.preparePutNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 9,
						"name": "Store.preparePutNodes"
					}
				},
				{
					"id": 125,
					"name": "preparePutValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 180,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L180"
						}
					],
					"signatures": [
						{
							"id": 126,
							"name": "preparePutValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 127,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 128,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 89,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 20,
								"name": "Store.preparePutValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 19,
						"name": "Store.preparePutValue"
					}
				},
				{
					"id": 102,
					"name": "prepareUpdateRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 81,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L81"
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "prepareUpdateRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare update the root. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 104,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 29,
								"name": "Store.prepareUpdateRoot"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 28,
						"name": "Store.prepareUpdateRoot"
					}
				},
				{
					"id": 115,
					"name": "strToValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 141,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L141"
						}
					],
					"signatures": [
						{
							"id": 116,
							"name": "strToValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert value string to a value of FieldElements type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{V}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 117,
									"name": "valueStr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 118,
									"name": "eltTyp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 89,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 89,
								"name": "V"
							}
						}
					]
				},
				{
					"id": 122,
					"name": "valueToStr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/level_store.ts",
							"line": 167,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L167"
						}
					],
					"signatures": [
						{
							"id": 123,
							"name": "valueToStr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Serialize the value of the FieldElements type into a string"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{string}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "LevelStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 124,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 89,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						87
					]
				},
				{
					"title": "Properties",
					"children": [
						93,
						97,
						95,
						94,
						96
					]
				},
				{
					"title": "Methods",
					"children": [
						134,
						98,
						132,
						105,
						100,
						119,
						136,
						112,
						129,
						108,
						125,
						102,
						115,
						122
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/store/level_store.ts",
					"line": 20,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/level_store.ts#L20"
				}
			],
			"typeParameters": [
				{
					"id": 138,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 5,
					"typeArguments": [
						{
							"type": "reference",
							"id": 89,
							"name": "V"
						}
					],
					"name": "Store"
				}
			]
		},
		{
			"id": 40,
			"name": "MemoryStore",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Store based on memory"
					}
				],
				"blockTags": [
					{
						"tag": "@implements",
						"content": []
					}
				]
			},
			"children": [
				{
					"id": 41,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 42,
							"name": "new MemoryStore",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of MemoryStore."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 43,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"id": 40,
								"typeArguments": [
									{
										"type": "reference",
										"id": 43,
										"name": "V"
									}
								],
								"name": "MemoryStore"
							}
						}
					]
				},
				{
					"id": 44,
					"name": "nodesMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 24,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L24"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 46,
					"name": "operationCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 27,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L27"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 47,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 50,
										"name": "k",
										"kind": 1024,
										"kindString": "Property",
										"flags": {},
										"sources": [
											{
												"fileName": "src/lib/store/memory_store.ts",
												"line": 30,
												"character": 4,
												"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L30"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 48,
										"name": "opType",
										"kind": 1024,
										"kindString": "Property",
										"flags": {},
										"sources": [
											{
												"fileName": "src/lib/store/memory_store.ts",
												"line": 28,
												"character": 4,
												"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L28"
											}
										],
										"type": {
											"type": "reference",
											"name": "OperationType"
										}
									},
									{
										"id": 49,
										"name": "setType",
										"kind": 1024,
										"kindString": "Property",
										"flags": {},
										"sources": [
											{
												"fileName": "src/lib/store/memory_store.ts",
												"line": 29,
												"character": 4,
												"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L29"
											}
										],
										"type": {
											"type": "reference",
											"name": "SetType"
										}
									},
									{
										"id": 51,
										"name": "v",
										"kind": 1024,
										"kindString": "Property",
										"flags": {},
										"sources": [
											{
												"fileName": "src/lib/store/memory_store.ts",
												"line": 31,
												"character": 4,
												"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L31"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											50,
											48,
											49,
											51
										]
									}
								],
								"sources": [
									{
										"fileName": "src/lib/store/memory_store.ts",
										"line": 27,
										"character": 28,
										"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L27"
									}
								]
							}
						}
					}
				},
				{
					"id": 45,
					"name": "valuesMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 25,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L25"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 43,
								"name": "V"
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 81,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 220,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L220"
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the store."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 36,
								"name": "Store.clear"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 35,
						"name": "Store.clear"
					}
				},
				{
					"id": 52,
					"name": "clearPrepareOperationCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 49,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L49"
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "clearPrepareOperationCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all prepare operation cache."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 34,
								"name": "Store.clearPrepareOperationCache"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 33,
						"name": "Store.clearPrepareOperationCache"
					}
				},
				{
					"id": 79,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 186,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L186"
						}
					],
					"signatures": [
						{
							"id": 80,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use the commit() method to actually submit all prepare changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 32,
								"name": "Store.commit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 31,
						"name": "Store.commit"
					}
				},
				{
					"id": 59,
					"name": "getNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 90,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L90"
						}
					],
					"signatures": [
						{
							"id": 60,
							"name": "getNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get nodes for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field[]>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 61,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 7,
								"name": "Store.getNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 6,
						"name": "Store.getNodes"
					}
				},
				{
					"id": 54,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 59,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L59"
						}
					],
					"signatures": [
						{
							"id": 55,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the tree root. Error is thrown when the root does not exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 27,
								"name": "Store.getRoot"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 26,
						"name": "Store.getRoot"
					}
				},
				{
					"id": 69,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 138,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L138"
						}
					],
					"signatures": [
						{
							"id": 70,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 71,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 43,
										"name": "V"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 17,
								"name": "Store.getValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 16,
						"name": "Store.getValue"
					}
				},
				{
					"id": 83,
					"name": "getValuesMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 231,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L231"
						}
					],
					"signatures": [
						{
							"id": 84,
							"name": "getValuesMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get values map, key is Field.toString()."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Map<string, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 43,
												"name": "V"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 38,
								"name": "Store.getValuesMap"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 37,
						"name": "Store.getValuesMap"
					}
				},
				{
					"id": 66,
					"name": "prepareDelNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 122,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L122"
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "prepareDelNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 68,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 14,
								"name": "Store.prepareDelNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 13,
						"name": "Store.prepareDelNodes"
					}
				},
				{
					"id": 76,
					"name": "prepareDelValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 171,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L171"
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "prepareDelValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 78,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 24,
								"name": "Store.prepareDelValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 23,
						"name": "Store.prepareDelValue"
					}
				},
				{
					"id": 62,
					"name": "preparePutNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 107,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L107"
						}
					],
					"signatures": [
						{
							"id": 63,
							"name": "preparePutNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 64,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 65,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 10,
								"name": "Store.preparePutNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 9,
						"name": "Store.preparePutNodes"
					}
				},
				{
					"id": 72,
					"name": "preparePutValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 156,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L156"
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "preparePutValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 74,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 75,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 43,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 20,
								"name": "Store.preparePutValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 19,
						"name": "Store.preparePutValue"
					}
				},
				{
					"id": 56,
					"name": "prepareUpdateRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/memory_store.ts",
							"line": 74,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "prepareUpdateRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare update the root. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MemoryStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 58,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 29,
								"name": "Store.prepareUpdateRoot"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 28,
						"name": "Store.prepareUpdateRoot"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						41
					]
				},
				{
					"title": "Properties",
					"children": [
						44,
						46,
						45
					]
				},
				{
					"title": "Methods",
					"children": [
						81,
						52,
						79,
						59,
						54,
						69,
						83,
						66,
						76,
						62,
						72,
						56
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/store/memory_store.ts",
					"line": 23,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/memory_store.ts#L23"
				}
			],
			"typeParameters": [
				{
					"id": 85,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 5,
					"typeArguments": [
						{
							"type": "reference",
							"id": 43,
							"name": "V"
						}
					],
					"name": "Store"
				}
			]
		},
		{
			"id": 700,
			"name": "MerkleTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Merkle Tree."
					}
				]
			},
			"children": [
				{
					"id": 721,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 124,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L124"
						}
					],
					"signatures": [
						{
							"id": 722,
							"name": "new MerkleTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 723,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 724,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 725,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 723,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 726,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 727,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 723,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 728,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									}
								},
								{
									"id": 729,
									"name": "hashValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 700,
								"typeArguments": [
									{
										"type": "reference",
										"id": 723,
										"name": "V"
									}
								],
								"name": "MerkleTree"
							}
						}
					]
				},
				{
					"id": 735,
					"name": "hashValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 24,
							"character": 21,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 732,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 21,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L21"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Hasher"
					}
				},
				{
					"id": 733,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 22,
							"character": 21,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 734,
					"name": "maxNumIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 23,
							"character": 21,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					}
				},
				{
					"id": 730,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 19,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L19"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 731,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 20,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"id": 5,
						"typeArguments": [
							{
								"type": "reference",
								"id": 723,
								"name": "V"
							}
						],
						"name": "Store"
					}
				},
				{
					"id": 736,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 25,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L25"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 723,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 756,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 261,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L261"
						}
					],
					"signatures": [
						{
							"id": 757,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 758,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 272,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L272"
						}
					],
					"signatures": [
						{
							"id": 759,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 760,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 741,
					"name": "depth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 175,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 742,
							"name": "depth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the depth of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{number}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 777,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 337,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L337"
						}
					],
					"signatures": [
						{
							"id": 778,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 779,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 750,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 219,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L219"
						}
					],
					"signatures": [
						{
							"id": 751,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for an index from the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{(Promise<V | null>)}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 752,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 723,
												"name": "V"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 748,
					"name": "getHasher",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 208,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L208"
						}
					],
					"signatures": [
						{
							"id": 749,
							"name": "getHasher",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the hasher function used by the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Hasher}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Hasher"
							}
						}
					]
				},
				{
					"id": 737,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 154,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L154"
						}
					],
					"signatures": [
						{
							"id": 738,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 746,
					"name": "getStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 198,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L198"
						}
					],
					"signatures": [
						{
							"id": 747,
							"name": "getStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the data store of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Store<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 5,
								"typeArguments": [
									{
										"type": "reference",
										"id": 723,
										"name": "V"
									}
								],
								"name": "Store"
							}
						}
					]
				},
				{
					"id": 753,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 246,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L246"
						}
					],
					"signatures": [
						{
							"id": 754,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the index exists in the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<boolean>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 755,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 739,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 164,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L164"
						}
					],
					"signatures": [
						{
							"id": 740,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the tree is empty."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 771,
					"name": "prove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 321,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L321"
						}
					],
					"signatures": [
						{
							"id": 772,
							"name": "prove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a merkle proof for an index against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<BaseMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 773,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 774,
					"name": "proveCompact",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 332,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L332"
						}
					],
					"signatures": [
						{
							"id": 775,
							"name": "proveCompact",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a compacted merkle proof for an index against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<CompactMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 776,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1000,
										"name": "CompactMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 800,
					"name": "proveForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 468,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L468"
						}
					],
					"signatures": [
						{
							"id": 801,
							"name": "proveForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 802,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 803,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 743,
					"name": "setRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 185,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L185"
						}
					],
					"signatures": [
						{
							"id": 744,
							"name": "setRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 745,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 792,
					"name": "sideNodesForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 426,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L426"
						}
					],
					"signatures": [
						{
							"id": 793,
							"name": "sideNodesForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 794,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 795,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 796,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 799,
													"name": "leafData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/merkle_tree.ts",
															"line": 429,
															"character": 55,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L429"
														}
													],
													"type": {
														"type": "reference",
														"name": "Field",
														"qualifiedName": "Field",
														"package": "o1js"
													}
												},
												{
													"id": 798,
													"name": "pathNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/merkle_tree.ts",
															"line": 429,
															"character": 35,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L429"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												},
												{
													"id": 797,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/merkle_tree.ts",
															"line": 429,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L429"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														799,
														798,
														797
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/merkle_tree.ts",
													"line": 429,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L429"
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 761,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 284,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L284"
						}
					],
					"signatures": [
						{
							"id": 762,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update a new value for an index in the tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 763,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 764,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 723,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 765,
					"name": "updateAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 301,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L301"
						}
					],
					"signatures": [
						{
							"id": 766,
							"name": "updateAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update multiple leaves and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 767,
									"name": "ivs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 768,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 769,
														"name": "index",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/lib/merkle/merkle_tree.ts",
																"line": 301,
																"character": 32,
																"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L301"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "bigint"
														}
													},
													{
														"id": 770,
														"name": "value",
														"kind": 1024,
														"kindString": "Property",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "src/lib/merkle/merkle_tree.ts",
																"line": 301,
																"character": 47,
																"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L301"
															}
														],
														"type": {
															"type": "reference",
															"id": 723,
															"name": "V"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															769,
															770
														]
													}
												],
												"sources": [
													{
														"fileName": "src/lib/merkle/merkle_tree.ts",
														"line": 301,
														"character": 30,
														"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L301"
													}
												]
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 780,
					"name": "updateForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 341,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L341"
						}
					],
					"signatures": [
						{
							"id": 781,
							"name": "updateForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 782,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 783,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 784,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 723,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 785,
					"name": "updateWithSideNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 368,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L368"
						}
					],
					"signatures": [
						{
							"id": 786,
							"name": "updateWithSideNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 787,
									"name": "sideNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 788,
									"name": "pathNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 789,
									"name": "oldLeafData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 790,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 791,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 723,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 701,
					"name": "build",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 43,
							"character": 22,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 702,
							"name": "build",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Build a new merkle tree."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<MerkleTree<V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 703,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 704,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 703,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 705,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 706,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 703,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 707,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 708,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 710,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/merkle/merkle_tree.ts",
															"line": 47,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L47"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 709,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/merkle/merkle_tree.ts",
															"line": 47,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L47"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														710,
														709
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/merkle_tree.ts",
													"line": 47,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L47"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 700,
										"typeArguments": [
											{
												"type": "reference",
												"id": 703,
												"name": "V"
											}
										],
										"name": "MerkleTree"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 711,
					"name": "import",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/merkle_tree.ts",
							"line": 98,
							"character": 22,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L98"
						}
					],
					"signatures": [
						{
							"id": 712,
							"name": "import",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Import a merkle tree via existing store."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<MerkleTree<V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 713,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 714,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 713,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 715,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 716,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 713,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 717,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 718,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 720,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/merkle/merkle_tree.ts",
															"line": 102,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L102"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 719,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/merkle/merkle_tree.ts",
															"line": 102,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L102"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														720,
														719
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/merkle_tree.ts",
													"line": 102,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L102"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 700,
										"typeArguments": [
											{
												"type": "reference",
												"id": 713,
												"name": "V"
											}
										],
										"name": "MerkleTree"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						721
					]
				},
				{
					"title": "Properties",
					"children": [
						735,
						732,
						733,
						734,
						730,
						731,
						736
					]
				},
				{
					"title": "Methods",
					"children": [
						756,
						758,
						741,
						777,
						750,
						748,
						737,
						746,
						753,
						739,
						771,
						774,
						800,
						743,
						792,
						761,
						765,
						780,
						785,
						701,
						711
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/merkle/merkle_tree.ts",
					"line": 18,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/merkle_tree.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 804,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 909,
			"name": "MerkleTreeUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collection of utility functions for merkle tree"
					}
				]
			},
			"children": [
				{
					"id": 998,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 999,
							"name": "new MerkleTreeUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 909,
								"name": "MerkleTreeUtils"
							}
						}
					]
				},
				{
					"id": 935,
					"name": "checkMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 277,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L277"
						}
					],
					"signatures": [
						{
							"id": 936,
							"name": "checkMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if the value is in the tree and it is at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 937,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 938,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 939,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 940,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 941,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 937,
										"name": "V"
									}
								},
								{
									"id": 942,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 937,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 943,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 944,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 946,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/proofs.ts",
															"line": 283,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L283"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 945,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/proofs.ts",
															"line": 283,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L283"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														946,
														945
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/proofs.ts",
													"line": 283,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L283"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 947,
					"name": "checkNonMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 310,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L310"
						}
					],
					"signatures": [
						{
							"id": 948,
							"name": "checkNonMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if there is no value at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 949,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 950,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 951,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 952,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 953,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 910,
					"name": "compactMerkleProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 88,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L88"
						}
					],
					"signatures": [
						{
							"id": 911,
							"name": "compactMerkleProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Compact a merkle proof to reduce its size"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{CompactMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 912,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 913,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reference",
								"id": 1000,
								"name": "CompactMerkleProof"
							}
						}
					]
				},
				{
					"id": 918,
					"name": "compactMerkleProofToJson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 160,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L160"
						}
					],
					"signatures": [
						{
							"id": 919,
							"name": "compactMerkleProofToJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert CompactMerkleProof to JSONValue."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{CompactMerkleProofJSON}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 920,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1000,
										"name": "CompactMerkleProof"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1005,
								"name": "CompactMerkleProofJSON"
							}
						}
					]
				},
				{
					"id": 924,
					"name": "computeRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 211,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L211"
						}
					],
					"signatures": [
						{
							"id": 925,
							"name": "computeRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calculate new root based on value. Note: This method cannot be executed in a circuit."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 926,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 927,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 928,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 929,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 926,
										"name": "V"
									}
								},
								{
									"id": 930,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 926,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 931,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 932,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 934,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/proofs.ts",
															"line": 216,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L216"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 933,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/proofs.ts",
															"line": 216,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L216"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														934,
														933
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/proofs.ts",
													"line": 216,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L216"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 983,
					"name": "computeRootByField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 449,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L449"
						}
					],
					"signatures": [
						{
							"id": 984,
							"name": "computeRootByField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Compute new merkle root by index and valueHashOrValueField"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 985,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 986,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 987,
									"name": "valueHashOrValueField",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 988,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 989,
					"name": "computeRootByFieldWithUpdates",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 487,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L487"
						}
					],
					"signatures": [
						{
							"id": 990,
							"name": "computeRootByFieldWithUpdates",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Compute new merkle root by index and valueHashOrValueField, return new root and updates."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{{ actualRoot: Field; updates: [Field, Field[]][] }}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 991,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 992,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 993,
									"name": "valueHashOrValueField",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 994,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 995,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 996,
											"name": "actualRoot",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/merkle/proofs.ts",
													"line": 492,
													"character": 7,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L492"
												}
											],
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 997,
											"name": "updates",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/merkle/proofs.ts",
													"line": 492,
													"character": 26,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L492"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														},
														{
															"type": "array",
															"elementType": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												996,
												997
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/merkle/proofs.ts",
											"line": 492,
											"character": 5,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L492"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 914,
					"name": "decompactMerkleProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 125,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L125"
						}
					],
					"signatures": [
						{
							"id": 915,
							"name": "decompactMerkleProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decompact a CompactMerkleProof."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{BaseMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 916,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1000,
										"name": "CompactMerkleProof"
									}
								},
								{
									"id": 917,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reference",
								"id": 841,
								"name": "BaseMerkleProof"
							}
						}
					]
				},
				{
					"id": 921,
					"name": "jsonToCompactMerkleProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 181,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L181"
						}
					],
					"signatures": [
						{
							"id": 922,
							"name": "jsonToCompactMerkleProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert JSONValue to CompactMerkleProof"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{CompactMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 923,
									"name": "jsonValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1005,
										"name": "CompactMerkleProofJSON"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1000,
								"name": "CompactMerkleProof"
							}
						}
					]
				},
				{
					"id": 954,
					"name": "verifyProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 347,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L347"
						}
					],
					"signatures": [
						{
							"id": 955,
							"name": "verifyProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify the merkle proof."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 956,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 957,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 958,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 959,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 960,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 956,
										"name": "V"
									}
								},
								{
									"id": 961,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 956,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 962,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 963,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 965,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/proofs.ts",
															"line": 353,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L353"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 964,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/proofs.ts",
															"line": 353,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L353"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														965,
														964
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/proofs.ts",
													"line": 353,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L353"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 966,
					"name": "verifyProofByField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 384,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L384"
						}
					],
					"signatures": [
						{
							"id": 967,
							"name": "verifyProofByField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify the merkle proof by index and valueHashOrValueField"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 968,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 969,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 970,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 971,
									"name": "valueHashOrValueField",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 972,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 973,
					"name": "verifyProofByFieldWithUpdates",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 417,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L417"
						}
					],
					"signatures": [
						{
							"id": 974,
							"name": "verifyProofByFieldWithUpdates",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify the merkle proof by index and valueHashOrValueField, return result and updates"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{{ ok: boolean; updates: [Field, Field[]][] }}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 975,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 976,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 977,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 978,
									"name": "valueHashOrValueField",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 979,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 980,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 981,
											"name": "ok",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/merkle/proofs.ts",
													"line": 423,
													"character": 7,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L423"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 982,
											"name": "updates",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/merkle/proofs.ts",
													"line": 423,
													"character": 20,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L423"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														},
														{
															"type": "array",
															"elementType": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												981,
												982
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/merkle/proofs.ts",
											"line": 423,
											"character": 5,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L423"
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						998
					]
				},
				{
					"title": "Methods",
					"children": [
						935,
						947,
						910,
						918,
						924,
						983,
						989,
						914,
						921,
						954,
						966,
						973
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/merkle/proofs.ts",
					"line": 78,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L78"
				}
			]
		},
		{
			"id": 139,
			"name": "MongoStore",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Store based on MongoDB"
					}
				],
				"blockTags": [
					{
						"tag": "@implements",
						"content": []
					}
				]
			},
			"children": [
				{
					"id": 140,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 41,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L41"
						}
					],
					"signatures": [
						{
							"id": 141,
							"name": "new MongoStore",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of MongoStore."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 142,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 143,
									"name": "db",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Connection",
										"qualifiedName": "Connection",
										"package": "mongoose"
									}
								},
								{
									"id": 144,
									"name": "eltTyp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 142,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 145,
									"name": "smtName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 139,
								"typeArguments": [
									{
										"type": "reference",
										"id": 142,
										"name": "V"
									}
								],
								"name": "MongoStore"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "db",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 26,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"name": "Connection",
						"qualifiedName": "Connection",
						"package": "mongoose"
					}
				},
				{
					"id": 157,
					"name": "eltTyp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 32,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L32"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 142,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 147,
					"name": "nodesModel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 27,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "IKV"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 148,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 149,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 150,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Model",
						"qualifiedName": "Model",
						"package": "mongoose"
					}
				},
				{
					"id": 155,
					"name": "nodesOperationCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 30,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L30"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 151,
					"name": "valuesModel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 28,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "IKV"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 152,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 153,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 154,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Model",
						"qualifiedName": "Model",
						"package": "mongoose"
					}
				},
				{
					"id": 156,
					"name": "valuesOperationCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 31,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L31"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 194,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 228,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L228"
						}
					],
					"signatures": [
						{
							"id": 195,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the store."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 36,
								"name": "Store.clear"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 35,
						"name": "Store.clear"
					}
				},
				{
					"id": 158,
					"name": "clearPrepareOperationCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 55,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 159,
							"name": "clearPrepareOperationCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all prepare operation cache."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 34,
								"name": "Store.clearPrepareOperationCache"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 33,
						"name": "Store.clearPrepareOperationCache"
					}
				},
				{
					"id": 192,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 210,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L210"
						}
					],
					"signatures": [
						{
							"id": 193,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use the commit() method to actually submit all prepare changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 32,
								"name": "Store.commit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 31,
						"name": "Store.commit"
					}
				},
				{
					"id": 165,
					"name": "getNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 94,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 166,
							"name": "getNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get nodes for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field[]>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 167,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 7,
								"name": "Store.getNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 6,
						"name": "Store.getNodes"
					}
				},
				{
					"id": 160,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 66,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L66"
						}
					],
					"signatures": [
						{
							"id": 161,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the tree root. Error is thrown when the root does not exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 27,
								"name": "Store.getRoot"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 26,
						"name": "Store.getRoot"
					}
				},
				{
					"id": 179,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 152,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L152"
						}
					],
					"signatures": [
						{
							"id": 180,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 181,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 142,
										"name": "V"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 17,
								"name": "Store.getValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 16,
						"name": "Store.getValue"
					}
				},
				{
					"id": 196,
					"name": "getValuesMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 239,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L239"
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "getValuesMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get values map, key is Field.toString()."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Map<string, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 142,
												"name": "V"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 38,
								"name": "Store.getValuesMap"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 37,
						"name": "Store.getValuesMap"
					}
				},
				{
					"id": 172,
					"name": "prepareDelNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 123,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L123"
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "prepareDelNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 174,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 14,
								"name": "Store.prepareDelNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 13,
						"name": "Store.prepareDelNodes"
					}
				},
				{
					"id": 189,
					"name": "prepareDelValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 196,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L196"
						}
					],
					"signatures": [
						{
							"id": 190,
							"name": "prepareDelValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 191,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 24,
								"name": "Store.prepareDelValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 23,
						"name": "Store.prepareDelValue"
					}
				},
				{
					"id": 168,
					"name": "preparePutNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 107,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L107"
						}
					],
					"signatures": [
						{
							"id": 169,
							"name": "preparePutNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 170,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 171,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 10,
								"name": "Store.preparePutNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 9,
						"name": "Store.preparePutNodes"
					}
				},
				{
					"id": 185,
					"name": "preparePutValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 178,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L178"
						}
					],
					"signatures": [
						{
							"id": 186,
							"name": "preparePutValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 187,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 188,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 142,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 20,
								"name": "Store.preparePutValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 19,
						"name": "Store.preparePutValue"
					}
				},
				{
					"id": 162,
					"name": "prepareUpdateRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 77,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L77"
						}
					],
					"signatures": [
						{
							"id": 163,
							"name": "prepareUpdateRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare update the root. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 164,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 29,
								"name": "Store.prepareUpdateRoot"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 28,
						"name": "Store.prepareUpdateRoot"
					}
				},
				{
					"id": 175,
					"name": "strToValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 140,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L140"
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "strToValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert value string to a value of FieldElements type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{V}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "MongoStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 177,
									"name": "valueStr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 178,
									"name": "eltTyp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 142,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 142,
								"name": "V"
							}
						}
					]
				},
				{
					"id": 182,
					"name": "valueToStr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/mongo_store.ts",
							"line": 166,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L166"
						}
					],
					"signatures": [
						{
							"id": 183,
							"name": "valueToStr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Serialize the value of the FieldElements type into a string"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{string}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 184,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 142,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						140
					]
				},
				{
					"title": "Properties",
					"children": [
						146,
						157,
						147,
						155,
						151,
						156
					]
				},
				{
					"title": "Methods",
					"children": [
						194,
						158,
						192,
						165,
						160,
						179,
						196,
						172,
						189,
						168,
						185,
						162,
						175,
						182
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/store/mongo_store.ts",
					"line": 25,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/mongo_store.ts#L25"
				}
			],
			"typeParameters": [
				{
					"id": 198,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 5,
					"typeArguments": [
						{
							"type": "reference",
							"id": 142,
							"name": "V"
						}
					],
					"name": "Store"
				}
			]
		},
		{
			"id": 1983,
			"name": "PoseidonHasher",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A helper class encapsulating Poseidon hash functionality."
					}
				]
			},
			"children": [
				{
					"id": 1984,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/poseidon_hasher.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/poseidon_hasher.ts#L8"
						}
					],
					"signatures": [
						{
							"id": 1985,
							"name": "new PoseidonHasher",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1983,
								"name": "PoseidonHasher"
							}
						}
					]
				},
				{
					"id": 1986,
					"name": "compress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/poseidon_hasher.ts",
							"line": 16,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/poseidon_hasher.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 1987,
							"name": "compress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Compresses two 32-byte hashes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The new 32-byte hash."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1988,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first hash."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1989,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second hash."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Hasher.compress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Hasher.compress"
					}
				},
				{
					"id": 1990,
					"name": "compressInputs",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/poseidon_hasher.ts",
							"line": 25,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/poseidon_hasher.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 1991,
							"name": "compressInputs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Compresses an array of buffers."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The resulting 32-byte hash."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1992,
									"name": "inputs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The array of buffers to compress."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Hasher.compressInputs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Hasher.compressInputs"
					}
				},
				{
					"id": 1993,
					"name": "hashToTree",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/types/poseidon_hasher.ts",
							"line": 40,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/poseidon_hasher.ts#L40"
						}
					],
					"signatures": [
						{
							"id": 1994,
							"name": "hashToTree",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Given a buffer containing 32 byte poseidon leaves, return a new buffer containing the leaves and all pairs of\r\nnodes that define a merkle tree.\r\n\r\nE.g.\r\nInput:  [1][2][3][4]\r\nOutput: [1][2][3][4][compress(1,2)][compress(3,4)][compress(5,6)]."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A tree represented by an array."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1995,
									"name": "leaves",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 32 byte poseidon leaves."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"name": "Hasher.hashToTree"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "Hasher.hashToTree"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1984
					]
				},
				{
					"title": "Methods",
					"children": [
						1986,
						1990,
						1993
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/types/poseidon_hasher.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/poseidon_hasher.ts#L7"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"name": "Hasher"
				}
			]
		},
		{
			"id": 1549,
			"name": "ProvableCSMTUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collection of utility functions for compact sparse merkle tree in the circuit."
					}
				]
			},
			"children": [
				{
					"id": 1577,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1578,
							"name": "new ProvableCSMTUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1549,
								"name": "ProvableCSMTUtils"
							}
						}
					]
				},
				{
					"id": 1550,
					"name": "checkMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/verify_circuit.ts",
							"line": 40,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L40"
						}
					],
					"signatures": [
						{
							"id": 1551,
							"name": "checkMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if the value is in the tree and it is at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Bool}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableCSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1552,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1553,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1554,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								},
								{
									"id": 1555,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1556,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1552,
										"name": "K"
									}
								},
								{
									"id": 1557,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1552,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1558,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1553,
										"name": "V"
									}
								},
								{
									"id": 1559,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1553,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1560,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1561,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1563,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/verify_circuit.ts",
															"line": 49,
															"character": 6,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L49"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1564,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/verify_circuit.ts",
															"line": 50,
															"character": 6,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L50"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1562,
													"name": "treeHasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/verify_circuit.ts",
															"line": 48,
															"character": 6,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L48"
														}
													],
													"type": {
														"type": "reference",
														"id": 1209,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1552,
																"name": "K"
															},
															{
																"type": "reference",
																"id": 1553,
																"name": "V"
															}
														],
														"name": "TreeHasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1563,
														1564,
														1562
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/verify_circuit.ts",
													"line": 47,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L47"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1565,
					"name": "checkNonMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/verify_circuit.ts",
							"line": 100,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L100"
						}
					],
					"signatures": [
						{
							"id": 1566,
							"name": "checkNonMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if there is no value at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Bool}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableCSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1567,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1568,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1569,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1273,
										"name": "CompactSparseMerkleProof"
									}
								},
								{
									"id": 1570,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1571,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1567,
										"name": "K"
									}
								},
								{
									"id": 1572,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1567,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1573,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1574,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1576,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/verify_circuit.ts",
															"line": 105,
															"character": 45,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L105"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1575,
													"name": "treeHasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/compact_smt/verify_circuit.ts",
															"line": 105,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L105"
														}
													],
													"type": {
														"type": "reference",
														"id": 1209,
														"typeArguments": [
															{
																"type": "reference",
																"id": 1567,
																"name": "K"
															},
															{
																"type": "reference",
																"id": 1568,
																"name": "V"
															}
														],
														"name": "TreeHasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1576,
														1575
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/compact_smt/verify_circuit.ts",
													"line": 105,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L105"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1577
					]
				},
				{
					"title": "Methods",
					"children": [
						1550,
						1565
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/compact_smt/verify_circuit.ts",
					"line": 13,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/verify_circuit.ts#L13"
				}
			]
		},
		{
			"id": 1053,
			"name": "ProvableDeepMerkleSubTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "ProvableDeepMerkleSubTree is a deep merkle subtree for working on only a few leafs in circuit."
					}
				]
			},
			"children": [
				{
					"id": 1054,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 1055,
							"name": "new ProvableDeepMerkleSubTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of ProvableDeepMerkleSubTree."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepMerkleSubTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1056,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1057,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "merkle root"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1058,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "height of tree"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1059,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1056,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1060,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1061,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1063,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
															"line": 40,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L40"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1062,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
															"line": 40,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L40"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1063,
														1062
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
													"line": 40,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L40"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 1053,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1056,
										"name": "V"
									}
								],
								"name": "ProvableDeepMerkleSubTree"
							}
						}
					]
				},
				{
					"id": 1069,
					"name": "hashValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 21,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1068,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 20,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Hasher"
					}
				},
				{
					"id": 1067,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 19,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1064,
					"name": "nodeStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 16,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 1066,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 18,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 1065,
					"name": "valueStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 17,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 1070,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 22,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1056,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 1078,
					"name": "addBranch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 98,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L98"
						}
					],
					"signatures": [
						{
							"id": 1079,
							"name": "addBranch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a branch to the tree, a branch is generated by smt.prove."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1080,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 1081,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1082,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1056,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1076,
					"name": "getHeight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 86,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L86"
						}
					],
					"signatures": [
						{
							"id": 1077,
							"name": "getHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get height of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{number}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepMerkleSubTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1074,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 76,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L76"
						}
					],
					"signatures": [
						{
							"id": 1075,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepMerkleSubTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1071,
					"name": "getValueField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 57,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 1072,
							"name": "getValueField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1073,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1056,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1083,
					"name": "prove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 127,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L127"
						}
					],
					"signatures": [
						{
							"id": 1084,
							"name": "prove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{BaseMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1085,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 841,
								"name": "BaseMerkleProof"
							}
						}
					]
				},
				{
					"id": 1086,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
							"line": 173,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L173"
						}
					],
					"signatures": [
						{
							"id": 1087,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update a new value for a key in the tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1088,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1089,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1056,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1054
					]
				},
				{
					"title": "Properties",
					"children": [
						1069,
						1068,
						1067,
						1064,
						1066,
						1065,
						1070
					]
				},
				{
					"title": "Methods",
					"children": [
						1078,
						1076,
						1074,
						1071,
						1083,
						1086
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/merkle/deep_subtree_circuit.ts",
					"line": 15,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/deep_subtree_circuit.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 1090,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 653,
			"name": "ProvableDeepSparseMerkleSubTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "ProvableDeepSparseMerkleSubTree is a deep sparse merkle subtree for working on only a few leafs in circuit."
					}
				]
			},
			"children": [
				{
					"id": 654,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 40,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L40"
						}
					],
					"signatures": [
						{
							"id": 655,
							"name": "new ProvableDeepSparseMerkleSubTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of ProvableDeepSparseMerkleSubTree."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 656,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 657,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 658,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "merkle root"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 659,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 656,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 660,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 657,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 661,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 662,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 664,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/deep_subtree_circuit.ts",
															"line": 44,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L44"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 665,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/deep_subtree_circuit.ts",
															"line": 44,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L44"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 663,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/deep_subtree_circuit.ts",
															"line": 44,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L44"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														664,
														665,
														663
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/deep_subtree_circuit.ts",
													"line": 44,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L44"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 653,
								"typeArguments": [
									{
										"type": "reference",
										"id": 656,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 657,
										"name": "V"
									}
								],
								"name": "ProvableDeepSparseMerkleSubTree"
							}
						}
					]
				},
				{
					"id": 670,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 22,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L22"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 671,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 672,
									"name": "hashKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/smt/deep_subtree_circuit.ts",
											"line": 22,
											"character": 20,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L22"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 673,
									"name": "hashValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/smt/deep_subtree_circuit.ts",
											"line": 22,
											"character": 38,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L22"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										672,
										673
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/smt/deep_subtree_circuit.ts",
									"line": 22,
									"character": 18,
									"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L22"
								}
							]
						}
					}
				},
				{
					"id": 669,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 21,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L21"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Hasher"
					}
				},
				{
					"id": 674,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 23,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L23"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 656,
								"name": "K"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 666,
					"name": "nodeStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 18,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 668,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 20,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 667,
					"name": "valueStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 19,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L19"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						],
						"name": "Map",
						"qualifiedName": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 675,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 24,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L24"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 657,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 686,
					"name": "addBranch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 109,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 687,
							"name": "addBranch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a branch to the tree, a branch is generated by smt.prove."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 688,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								},
								{
									"id": 689,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 656,
										"name": "K"
									}
								},
								{
									"id": 690,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 657,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 678,
					"name": "getHeight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 75,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L75"
						}
					],
					"signatures": [
						{
							"id": 679,
							"name": "getHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get height of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{number}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 680,
					"name": "getKeyField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 79,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L79"
						}
					],
					"signatures": [
						{
							"id": 681,
							"name": "getKeyField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 682,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 656,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 676,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 65,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 677,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 683,
					"name": "getValueField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 89,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L89"
						}
					],
					"signatures": [
						{
							"id": 684,
							"name": "getValueField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 685,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 657,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 691,
					"name": "prove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 136,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L136"
						}
					],
					"signatures": [
						{
							"id": 692,
							"name": "prove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{SparseMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 693,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 656,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 431,
								"name": "SparseMerkleProof"
							}
						}
					]
				},
				{
					"id": 694,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/deep_subtree_circuit.ts",
							"line": 178,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L178"
						}
					],
					"signatures": [
						{
							"id": 695,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update a new value for a key in the tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableDeepSparseMerkleSubTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 696,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 656,
										"name": "K"
									}
								},
								{
									"id": 697,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 657,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						654
					]
				},
				{
					"title": "Properties",
					"children": [
						670,
						669,
						674,
						666,
						668,
						667,
						675
					]
				},
				{
					"title": "Methods",
					"children": [
						686,
						678,
						680,
						676,
						683,
						691,
						694
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/smt/deep_subtree_circuit.ts",
					"line": 17,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/deep_subtree_circuit.ts#L17"
				}
			],
			"typeParameters": [
				{
					"id": 698,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 699,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 805,
			"name": "ProvableMerkleTreeUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collection of utility functions for merkle tree in the circuit."
					}
				]
			},
			"children": [
				{
					"id": 839,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 840,
							"name": "new ProvableMerkleTreeUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 805,
								"name": "ProvableMerkleTreeUtils"
							}
						}
					]
				},
				{
					"id": 806,
					"name": "EMPTY_VALUE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Empty value for merkle tree"
							}
						],
						"blockTags": [
							{
								"tag": "@static",
								"content": []
							},
							{
								"tag": "@memberof",
								"content": [
									{
										"kind": "text",
										"text": "ProvableMerkleTreeUtils"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/verify_circuit.ts",
							"line": 20,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					},
					"defaultValue": "EMPTY_VALUE"
				},
				{
					"id": 807,
					"name": "MerkleProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/verify_circuit.ts",
							"line": 30,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 808,
							"name": "MerkleProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a meerkle proof circuit value type based on the specified tree height."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{typeof BaseMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableMerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 809,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 841,
									"name": "BaseMerkleProof"
								}
							}
						}
					]
				},
				{
					"id": 821,
					"name": "checkMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/verify_circuit.ts",
							"line": 107,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L107"
						}
					],
					"signatures": [
						{
							"id": 822,
							"name": "checkMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if the value is in the tree and it is at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Bool}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableMerkleTreeUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 823,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 824,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 825,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 826,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 827,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 823,
										"name": "V"
									}
								},
								{
									"id": 828,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 823,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 829,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 830,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 832,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/verify_circuit.ts",
															"line": 113,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L113"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 831,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/merkle/verify_circuit.ts",
															"line": 113,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L113"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														832,
														831
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/verify_circuit.ts",
													"line": 113,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L113"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 833,
					"name": "checkNonMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/verify_circuit.ts",
							"line": 139,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L139"
						}
					],
					"signatures": [
						{
							"id": 834,
							"name": "checkNonMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if there is no value at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Bool}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableMerkleTreeUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 835,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 836,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 837,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 838,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 810,
					"name": "computeRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/merkle/verify_circuit.ts",
							"line": 61,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L61"
						}
					],
					"signatures": [
						{
							"id": 811,
							"name": "computeRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calculate new root based on index and value."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableMerkleTreeUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 812,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 813,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 841,
										"name": "BaseMerkleProof"
									}
								},
								{
									"id": 814,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 815,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 812,
										"name": "V"
									}
								},
								{
									"id": 816,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 812,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 817,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 818,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 820,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/merkle/verify_circuit.ts",
															"line": 66,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L66"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 819,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/merkle/verify_circuit.ts",
															"line": 66,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L66"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														820,
														819
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/merkle/verify_circuit.ts",
													"line": 66,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L66"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						839
					]
				},
				{
					"title": "Properties",
					"children": [
						806
					]
				},
				{
					"title": "Methods",
					"children": [
						807,
						821,
						833,
						810
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/merkle/verify_circuit.ts",
					"line": 13,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/verify_circuit.ts#L13"
				}
			]
		},
		{
			"id": 372,
			"name": "ProvableSMTUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collection of utility functions for sparse merkle tree in the circuit."
					}
				]
			},
			"children": [
				{
					"id": 429,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 430,
							"name": "new ProvableSMTUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 372,
								"name": "ProvableSMTUtils"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "EMPTY_VALUE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Empty value for sparse merkle tree"
							}
						],
						"blockTags": [
							{
								"tag": "@static",
								"content": []
							},
							{
								"tag": "@memberof",
								"content": [
									{
										"kind": "text",
										"text": "ProvableSMTUtils"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/smt/verify_circuit.ts",
							"line": 20,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					},
					"defaultValue": "EMPTY_VALUE"
				},
				{
					"id": 382,
					"name": "computeRootByField",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/verify_circuit.ts",
							"line": 47,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L47"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 383,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/smt/verify_circuit.ts",
									"line": 248,
									"character": 9,
									"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L248"
								}
							],
							"signatures": [
								{
									"id": 384,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Calculate new root based on sideNodes, keyHashOrKeyField and valueHashOrValueField"
											}
										],
										"blockTags": [
											{
												"tag": "@static",
												"content": []
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "{Field}"
													}
												]
											},
											{
												"tag": "@memberof",
												"content": [
													{
														"kind": "text",
														"text": "ProvableSMTUtils"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 385,
											"name": "sideNodes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Field",
													"qualifiedName": "Field",
													"package": "o1js"
												}
											}
										},
										{
											"id": 386,
											"name": "keyHashOrKeyField",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 387,
											"name": "valueHashOrValueField",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 388,
											"name": "hasher",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 1,
												"name": "Hasher"
											},
											"defaultValue": "Poseidon.hash"
										}
									],
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							]
						}
					},
					"defaultValue": "computeRootByFieldInCircuit"
				},
				{
					"id": 374,
					"name": "verifyProofByField",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/verify_circuit.ts",
							"line": 34,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L34"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 375,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/smt/verify_circuit.ts",
									"line": 222,
									"character": 9,
									"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L222"
								}
							],
							"signatures": [
								{
									"id": 376,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Verify a merkle proof by root, keyHashOrKeyField and valueHashOrValueField"
											}
										],
										"blockTags": [
											{
												"tag": "@static",
												"content": []
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "{Bool}"
													}
												]
											},
											{
												"tag": "@memberof",
												"content": [
													{
														"kind": "text",
														"text": "ProvableSMTUtils"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 377,
											"name": "proof",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 431,
												"name": "SparseMerkleProof"
											}
										},
										{
											"id": 378,
											"name": "expectedRoot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 379,
											"name": "keyHashOrKeyField",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 380,
											"name": "valueHashOrValueField",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 381,
											"name": "hasher",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 1,
												"name": "Hasher"
											},
											"defaultValue": "Poseidon.hash"
										}
									],
									"type": {
										"type": "reference",
										"name": "Bool",
										"qualifiedName": "Bool",
										"package": "o1js"
									}
								}
							]
						}
					},
					"defaultValue": "verifyProofByFieldInCircuit"
				},
				{
					"id": 389,
					"name": "checkMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/verify_circuit.ts",
							"line": 71,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L71"
						}
					],
					"signatures": [
						{
							"id": 390,
							"name": "checkMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if the value is in the tree and it is at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Bool}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 391,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 392,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 393,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								},
								{
									"id": 394,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 395,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 391,
										"name": "K"
									}
								},
								{
									"id": 396,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 391,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 397,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 392,
										"name": "V"
									}
								},
								{
									"id": 398,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 392,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 399,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 400,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 402,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/verify_circuit.ts",
															"line": 78,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L78"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 403,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/verify_circuit.ts",
															"line": 78,
															"character": 50,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L78"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 401,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/verify_circuit.ts",
															"line": 78,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L78"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														402,
														403,
														401
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/verify_circuit.ts",
													"line": 78,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L78"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 404,
					"name": "checkNonMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/verify_circuit.ts",
							"line": 126,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L126"
						}
					],
					"signatures": [
						{
							"id": 405,
							"name": "checkNonMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if there is no value at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Bool}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 406,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 407,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								},
								{
									"id": 408,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 409,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 406,
										"name": "K"
									}
								},
								{
									"id": 410,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 406,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 411,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 412,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 414,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/verify_circuit.ts",
															"line": 131,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L131"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 413,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/verify_circuit.ts",
															"line": 131,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L131"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														414,
														413
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/verify_circuit.ts",
													"line": 131,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L131"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 415,
					"name": "computeRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/verify_circuit.ts",
							"line": 175,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 416,
							"name": "computeRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calculate new root based on sideNodes, key and value"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "ProvableSMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 417,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 418,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 419,
									"name": "sideNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 420,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 417,
										"name": "K"
									}
								},
								{
									"id": 421,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 417,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 422,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 418,
										"name": "V"
									}
								},
								{
									"id": 423,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 418,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 424,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 425,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 427,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/verify_circuit.ts",
															"line": 181,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L181"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 428,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/verify_circuit.ts",
															"line": 181,
															"character": 50,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L181"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 426,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/verify_circuit.ts",
															"line": 181,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L181"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														427,
														428,
														426
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/verify_circuit.ts",
													"line": 181,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L181"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						429
					]
				},
				{
					"title": "Properties",
					"children": [
						373,
						382,
						374
					]
				},
				{
					"title": "Methods",
					"children": [
						389,
						404,
						415
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/smt/verify_circuit.ts",
					"line": 13,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/verify_circuit.ts#L13"
				}
			]
		},
		{
			"id": 199,
			"name": "RocksStore",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Store based on rocksdb"
					}
				],
				"blockTags": [
					{
						"tag": "@implements",
						"content": []
					}
				]
			},
			"children": [
				{
					"id": 200,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 201,
							"name": "new RocksStore",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of RocksStore."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 202,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 203,
									"name": "db",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "AbstractLevelDOWN",
												"qualifiedName": "AbstractLevelDOWN",
												"package": "@types/abstract-leveldown"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "AbstractIterator",
												"qualifiedName": "AbstractIterator",
												"package": "@types/abstract-leveldown"
											}
										],
										"name": "LevelUp",
										"qualifiedName": "levelup.LevelUp",
										"package": "@types/levelup"
									}
								},
								{
									"id": 204,
									"name": "eltTyp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 202,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 205,
									"name": "smtName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 199,
								"typeArguments": [
									{
										"type": "reference",
										"id": 202,
										"name": "V"
									}
								],
								"name": "RocksStore"
							}
						}
					]
				},
				{
					"id": 207,
					"name": "batch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 18,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "LevelUpChain",
						"qualifiedName": "levelup.LevelUpChain",
						"package": "@types/levelup"
					}
				},
				{
					"id": 206,
					"name": "db",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 17,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AbstractLevelDOWN",
								"qualifiedName": "AbstractLevelDOWN",
								"package": "@types/abstract-leveldown"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AbstractIterator",
								"qualifiedName": "AbstractIterator",
								"package": "@types/abstract-leveldown"
							}
						],
						"name": "LevelUp",
						"qualifiedName": "levelup.LevelUp",
						"package": "@types/levelup"
					}
				},
				{
					"id": 210,
					"name": "eltTyp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 21,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L21"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 202,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 209,
					"name": "leavesKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 20,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 208,
					"name": "nodesKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 19,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 247,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 187,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L187"
						}
					],
					"signatures": [
						{
							"id": 248,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the store."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 36,
								"name": "Store.clear"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 35,
						"name": "Store.clear"
					}
				},
				{
					"id": 211,
					"name": "clearPrepareOperationCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 43,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 212,
							"name": "clearPrepareOperationCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all prepare operation cache."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 34,
								"name": "Store.clearPrepareOperationCache"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 33,
						"name": "Store.clearPrepareOperationCache"
					}
				},
				{
					"id": 245,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 173,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L173"
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use the commit() method to actually submit all prepare changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 32,
								"name": "Store.commit"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 31,
						"name": "Store.commit"
					}
				},
				{
					"id": 218,
					"name": "getNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 75,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L75"
						}
					],
					"signatures": [
						{
							"id": 219,
							"name": "getNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get nodes for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field[]>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 220,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 7,
								"name": "Store.getNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 6,
						"name": "Store.getNodes"
					}
				},
				{
					"id": 213,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 53,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 214,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the tree root. Error is thrown when the root does not exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 27,
								"name": "Store.getRoot"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 26,
						"name": "Store.getRoot"
					}
				},
				{
					"id": 232,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 126,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L126"
						}
					],
					"signatures": [
						{
							"id": 233,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 234,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 202,
										"name": "V"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 17,
								"name": "Store.getValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 16,
						"name": "Store.getValue"
					}
				},
				{
					"id": 249,
					"name": "getValuesMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 197,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L197"
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "getValuesMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get values map, key is Field.toString()."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Map<string, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 202,
												"name": "V"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 38,
								"name": "Store.getValuesMap"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 37,
						"name": "Store.getValuesMap"
					}
				},
				{
					"id": 225,
					"name": "prepareDelNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 101,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L101"
						}
					],
					"signatures": [
						{
							"id": 226,
							"name": "prepareDelNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 227,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 14,
								"name": "Store.prepareDelNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 13,
						"name": "Store.prepareDelNodes"
					}
				},
				{
					"id": 242,
					"name": "prepareDelValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 163,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "prepareDelValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 244,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 24,
								"name": "Store.prepareDelValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 23,
						"name": "Store.prepareDelValue"
					}
				},
				{
					"id": 221,
					"name": "preparePutNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 88,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L88"
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "preparePutNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 223,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 224,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 10,
								"name": "Store.preparePutNodes"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 9,
						"name": "Store.preparePutNodes"
					}
				},
				{
					"id": 238,
					"name": "preparePutValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 152,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L152"
						}
					],
					"signatures": [
						{
							"id": 239,
							"name": "preparePutValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 240,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 241,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 202,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 20,
								"name": "Store.preparePutValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 19,
						"name": "Store.preparePutValue"
					}
				},
				{
					"id": 215,
					"name": "prepareUpdateRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 64,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L64"
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "prepareUpdateRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare update the root. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 217,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"id": 29,
								"name": "Store.prepareUpdateRoot"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 28,
						"name": "Store.prepareUpdateRoot"
					}
				},
				{
					"id": 228,
					"name": "strToValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 114,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L114"
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "strToValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert value string to a value of FieldElements type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{V}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 230,
									"name": "valueStr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 231,
									"name": "eltTyp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 202,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 202,
								"name": "V"
							}
						}
					]
				},
				{
					"id": 235,
					"name": "valueToStr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/rocks_store.ts",
							"line": 140,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L140"
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "valueToStr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isProtected": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Serialize the value of the FieldElements type into a string"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{string}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "RocksStore"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 237,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 202,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						200
					]
				},
				{
					"title": "Properties",
					"children": [
						207,
						206,
						210,
						209,
						208
					]
				},
				{
					"title": "Methods",
					"children": [
						247,
						211,
						245,
						218,
						213,
						232,
						249,
						225,
						242,
						221,
						238,
						215,
						228,
						235
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/store/rocks_store.ts",
					"line": 16,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/rocks_store.ts#L16"
				}
			],
			"typeParameters": [
				{
					"id": 251,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 5,
					"typeArguments": [
						{
							"type": "reference",
							"id": 202,
							"name": "V"
						}
					],
					"name": "Store"
				}
			]
		},
		{
			"id": 504,
			"name": "SMTUtils",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collection of utility functions for sparse merkle tree"
					}
				]
			},
			"children": [
				{
					"id": 591,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 592,
							"name": "new SMTUtils",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "SMTUtils"
							}
						}
					]
				},
				{
					"id": 525,
					"name": "checkMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 189,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L189"
						}
					],
					"signatures": [
						{
							"id": 526,
							"name": "checkMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if the value is in the tree and it is at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 527,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 528,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 529,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								},
								{
									"id": 530,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 531,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 527,
										"name": "K"
									}
								},
								{
									"id": 532,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 527,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 533,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 528,
										"name": "V"
									}
								},
								{
									"id": 534,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 528,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 535,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 536,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 538,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 196,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L196"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 539,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 196,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L196"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 537,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 196,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L196"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														538,
														539,
														537
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/proofs.ts",
													"line": 196,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L196"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 540,
					"name": "checkNonMembership",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 233,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L233"
						}
					],
					"signatures": [
						{
							"id": 541,
							"name": "checkNonMembership",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if there is no value at the index from the key"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 542,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 543,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 544,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								},
								{
									"id": 545,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 546,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 542,
										"name": "K"
									}
								},
								{
									"id": 547,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 542,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 548,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 549,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 551,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 238,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L238"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 552,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 238,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L238"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 550,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 238,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L238"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														551,
														552,
														550
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/proofs.ts",
													"line": 238,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L238"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 583,
					"name": "compactProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 359,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L359"
						}
					],
					"signatures": [
						{
							"id": 584,
							"name": "compactProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Compact a proof to reduce its size"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{SparseCompactMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 585,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								},
								{
									"id": 586,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reference",
								"id": 593,
								"name": "SparseCompactMerkleProof"
							}
						}
					]
				},
				{
					"id": 511,
					"name": "computeRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 118,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L118"
						}
					],
					"signatures": [
						{
							"id": 512,
							"name": "computeRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calculate new root based on sideNodes, key and value"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 513,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 514,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 515,
									"name": "sideNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 516,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 513,
										"name": "K"
									}
								},
								{
									"id": 517,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 513,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 518,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 514,
										"name": "V"
									}
								},
								{
									"id": 519,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 514,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 520,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 521,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 523,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 124,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L124"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 524,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 124,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L124"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 522,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 124,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L124"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														523,
														524,
														522
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/proofs.ts",
													"line": 124,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L124"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 587,
					"name": "decompactProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 394,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L394"
						}
					],
					"signatures": [
						{
							"id": 588,
							"name": "decompactProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decompact a proof"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{SparseMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 589,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 593,
										"name": "SparseCompactMerkleProof"
									}
								},
								{
									"id": 590,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								}
							],
							"type": {
								"type": "reference",
								"id": 431,
								"name": "SparseMerkleProof"
							}
						}
					]
				},
				{
					"id": 508,
					"name": "jsonToSparseCompactMerkleProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 81,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L81"
						}
					],
					"signatures": [
						{
							"id": 509,
							"name": "jsonToSparseCompactMerkleProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert JSONValue to SparseCompactMerkleProof"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{SparseCompactMerkleProof}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 510,
									"name": "jsonValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 597,
										"name": "SparseCompactMerkleProofJSON"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 593,
								"name": "SparseCompactMerkleProof"
							}
						}
					]
				},
				{
					"id": 505,
					"name": "sparseCompactMerkleProofToJson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 57,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 506,
							"name": "sparseCompactMerkleProofToJson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert SparseCompactMerkleProof to JSONValue."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{SparseCompactMerkleProofJSON}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 507,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 593,
										"name": "SparseCompactMerkleProof"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 597,
								"name": "SparseCompactMerkleProofJSON"
							}
						}
					]
				},
				{
					"id": 568,
					"name": "verifyCompactProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 325,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L325"
						}
					],
					"signatures": [
						{
							"id": 569,
							"name": "verifyCompactProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify a compacted merkle proof"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 570,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 571,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 572,
									"name": "cproof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 593,
										"name": "SparseCompactMerkleProof"
									}
								},
								{
									"id": 573,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 574,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 570,
										"name": "K"
									}
								},
								{
									"id": 575,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 570,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 576,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 571,
										"name": "V"
									}
								},
								{
									"id": 577,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 571,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 578,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 579,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 581,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 332,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L332"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 582,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 332,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L332"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 580,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 332,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L332"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														581,
														582,
														580
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/proofs.ts",
													"line": 332,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L332"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 553,
					"name": "verifyProof",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 277,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L277"
						}
					],
					"signatures": [
						{
							"id": 554,
							"name": "verifyProof",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Verify a merkle proof"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SMTUtils"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 555,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 556,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 557,
									"name": "proof",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								},
								{
									"id": 558,
									"name": "expectedRoot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 559,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 555,
										"name": "K"
									}
								},
								{
									"id": 560,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 555,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 561,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 556,
										"name": "V"
									}
								},
								{
									"id": 562,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 556,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 563,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 564,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 566,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 284,
															"character": 31,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L284"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 567,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 284,
															"character": 49,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L284"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 565,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 284,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L284"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														566,
														567,
														565
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/proofs.ts",
													"line": 284,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L284"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						591
					]
				},
				{
					"title": "Methods",
					"children": [
						525,
						540,
						583,
						511,
						587,
						508,
						505,
						568,
						553
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/smt/proofs.ts",
					"line": 48,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L48"
				}
			]
		},
		{
			"id": 431,
			"name": "SparseMerkleProof",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Merkle proof CircuitValue for an element in a SparseMerkleTree."
					}
				]
			},
			"children": [
				{
					"id": 496,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 124,
							"character": 158
						}
					],
					"signatures": [
						{
							"id": 497,
							"name": "new SparseMerkleProof",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 498,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 499,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 501,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 18,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
														}
													],
													"type": {
														"type": "reference",
														"name": "Field",
														"qualifiedName": "Field",
														"package": "o1js"
													},
													"defaultValue": "Field"
												},
												{
													"id": 500,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 17,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														501,
														500
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
													"line": 42,
													"character": 78
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 431,
								"name": "SparseMerkleProof"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).constructor"
					}
				},
				{
					"id": 503,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					},
					"defaultValue": "Field",
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).root"
					}
				},
				{
					"id": 502,
					"name": "sideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).sideNodes"
					}
				},
				{
					"id": 435,
					"name": "_isStruct",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 125,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": true
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n})._isStruct"
					}
				},
				{
					"id": 459,
					"name": "check",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 156,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 460,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
									"line": 156,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 461,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Add assertions to the proof to check if "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is a valid member of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ".\nThis function does not return anything, rather creates any number of assertions on the proof to prove "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is a valid member of the type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ".\n\nFor instance, calling check function on the type "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Bool"
											},
											{
												"kind": "text",
												"text": " asserts that the value of the element is either 1 or 0."
											}
										]
									},
									"parameters": [
										{
											"id": 462,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the element of type "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " to put assertions on."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 463,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 465,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 18,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 464,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 17,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																465,
																464
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).check"
					}
				},
				{
					"id": 450,
					"name": "fromFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 451,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
									"line": 137,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 452,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns an element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": " from the given provable data.\n\n**Important**: For any element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ", this function is the reverse operation of calling "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "toFields",
												"target": 436
											},
											{
												"kind": "text",
												"text": " method on an element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An element of type "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " generated from the given provable data."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 453,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "an array of "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Field"
													},
													{
														"kind": "text",
														"text": " elements describing the provable data of the new "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " element."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Field",
													"qualifiedName": "Field",
													"package": "o1js"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 454,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 456,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 18,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
														}
													],
													"type": {
														"type": "reference",
														"name": "Field",
														"qualifiedName": "Field",
														"package": "o1js"
													},
													"defaultValue": "Field"
												},
												{
													"id": 455,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 17,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														456,
														455
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
													"line": 42,
													"character": 78
												}
											]
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).fromFields"
					}
				},
				{
					"id": 486,
					"name": "fromJSON",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 132,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 487,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
									"line": 132,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 488,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 489,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 490,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 492,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 18,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "Field"
														},
														{
															"id": 491,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 17,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																492,
																491
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 50,
															"character": 71
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 493,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 495,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 18,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
														}
													],
													"type": {
														"type": "reference",
														"name": "Field",
														"qualifiedName": "Field",
														"package": "o1js"
													},
													"defaultValue": "Field"
												},
												{
													"id": 494,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 17,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														495,
														494
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
													"line": 42,
													"character": 78
												}
											]
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).fromJSON"
					}
				},
				{
					"id": 443,
					"name": "toAuxiliary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 444,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
									"line": 126,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 445,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that takes "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " (optional), an element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ", as argument and returns an array of any type that make up the \"auxiliary\" (non-provable) data of "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ".\nAs any element of the interface "
											},
											{
												"kind": "code",
												"text": "`ProvablePure<T>`"
											},
											{
												"kind": "text",
												"text": " includes no \"auxiliary\" data by definition, this function always returns a default value."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An empty array, as any element of the interface "
													},
													{
														"kind": "code",
														"text": "`ProvablePure<T>`"
													},
													{
														"kind": "text",
														"text": " includes no \"auxiliary\" data by definition."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 446,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the element of type "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " to generate the auxiliary data array from, optional. If not provided, a default value for auxiliary data is returned."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 447,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 449,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 18,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 448,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 17,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																449,
																448
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).toAuxiliary"
					}
				},
				{
					"id": 436,
					"name": "toFields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 116,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 437,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
									"line": 116,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 438,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that takes "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ", an element of type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ", as argument and returns an array of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Field"
											},
											{
												"kind": "text",
												"text": " elements that make up the provable data of "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Field"
													},
													{
														"kind": "text",
														"text": " array describing how this "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " element is made up of "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Field"
													},
													{
														"kind": "text",
														"text": " elements."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 439,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the element of type "
													},
													{
														"kind": "code",
														"text": "`T`"
													},
													{
														"kind": "text",
														"text": " to generate the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Field"
													},
													{
														"kind": "text",
														"text": " array from."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 440,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 442,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 18,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 441,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 17,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																442,
																441
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).toFields"
					}
				},
				{
					"id": 466,
					"name": "toInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 127,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 467,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
									"line": 127,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 468,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 469,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 470,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 472,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 18,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 471,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 17,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																472,
																471
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 473,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 474,
													"name": "fields",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
															"line": 128,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												},
												{
													"id": 475,
													"name": "packed",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
															"line": 129,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														474,
														475
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
													"line": 127,
													"character": 23
												}
											]
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).toInput"
					}
				},
				{
					"id": 476,
					"name": "toJSON",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
							"line": 131,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 477,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/o1js/dist/node/lib/circuit_value.d.ts",
									"line": 131,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 478,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 479,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 480,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 482,
															"name": "root",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 18,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
																}
															],
															"type": {
																"type": "reference",
																"name": "Field",
																"qualifiedName": "Field",
																"package": "o1js"
															},
															"defaultValue": "Field"
														},
														{
															"id": 481,
															"name": "sideNodes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "src/lib/smt/proofs.ts",
																	"line": 17,
																	"character": 2,
																	"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Field",
																	"qualifiedName": "Field",
																	"package": "o1js"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																482,
																481
															]
														}
													],
													"sources": [
														{
															"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
															"line": 42,
															"character": 78
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 483,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 485,
													"name": "root",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 18,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "Field"
												},
												{
													"id": 484,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/proofs.ts",
															"line": 17,
															"character": 2,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														485,
														484
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
													"line": 50,
													"character": 71
												}
											]
										}
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).toJSON"
					}
				},
				{
					"id": 457,
					"name": "sizeInFields",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/o1js/dist/node/snarky.d.ts",
							"line": 146,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "sizeInFields",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return the size of the "
									},
									{
										"kind": "code",
										"text": "`T`"
									},
									{
										"kind": "text",
										"text": " type in terms of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field"
									},
									{
										"kind": "text",
										"text": " type, as "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field"
									},
									{
										"kind": "text",
										"text": " is the primitive type.\n\n**Warning**: This function returns a "
									},
									{
										"kind": "code",
										"text": "`number`"
									},
									{
										"kind": "text",
										"text": ", so you cannot use it to prove something on chain. You can use it during debugging or to understand the memory complexity of some type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " representing the size of the "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": " type in terms of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Field"
											},
											{
												"kind": "text",
												"text": " type."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).sizeInFields"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Struct({\r\n  sideNodes: Circuit.array(Field, SMT_DEPTH),\r\n  root: Field,\r\n}).sizeInFields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						496
					]
				},
				{
					"title": "Properties",
					"children": [
						503,
						502,
						435,
						459,
						450,
						486,
						443,
						436,
						466,
						476
					]
				},
				{
					"title": "Methods",
					"children": [
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/smt/proofs.ts",
					"line": 16,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L16"
				}
			],
			"extendedTypes": [
				{
					"type": "reflection",
					"declaration": {
						"id": 432,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {},
						"children": [
							{
								"id": 434,
								"name": "root",
								"kind": 1024,
								"kindString": "Property",
								"flags": {},
								"sources": [
									{
										"fileName": "src/lib/smt/proofs.ts",
										"line": 18,
										"character": 2,
										"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L18"
									}
								],
								"type": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								},
								"defaultValue": "Field"
							},
							{
								"id": 433,
								"name": "sideNodes",
								"kind": 1024,
								"kindString": "Property",
								"flags": {},
								"sources": [
									{
										"fileName": "src/lib/smt/proofs.ts",
										"line": 17,
										"character": 2,
										"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L17"
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								"defaultValue": "..."
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									434,
									433
								]
							}
						],
						"sources": [
							{
								"fileName": "node_modules/o1js/dist/node/bindings/lib/provable-snarky.d.ts",
								"line": 42,
								"character": 78
							}
						]
					}
				}
			]
		},
		{
			"id": 252,
			"name": "SparseMerkleTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Sparse Merkle Tree"
					}
				]
			},
			"children": [
				{
					"id": 278,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 155,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L155"
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "new SparseMerkleTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 280,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 281,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 282,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 283,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 281,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 284,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 280,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 285,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 281,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 286,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									}
								},
								{
									"id": 287,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 288,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 289,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 161,
															"character": 14,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L161"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 290,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 161,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L161"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														289,
														290
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/smt.ts",
													"line": 161,
													"character": 12,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L161"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"typeArguments": [
									{
										"type": "reference",
										"id": 280,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 281,
										"name": "V"
									}
								],
								"name": "SparseMerkleTree"
							}
						}
					]
				},
				{
					"id": 294,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 35,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L35"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 295,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 296,
									"name": "hashKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/smt/smt.ts",
											"line": 35,
											"character": 22,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L35"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 297,
									"name": "hashValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/smt/smt.ts",
											"line": 35,
											"character": 40,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L35"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										296,
										297
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/smt/smt.ts",
									"line": 35,
									"character": 20,
									"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L35"
								}
							]
						}
					}
				},
				{
					"id": 293,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 34,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L34"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Hasher"
					}
				},
				{
					"id": 298,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 36,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L36"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 280,
								"name": "K"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 291,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 32,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L32"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 292,
					"name": "store",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 33,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"id": 5,
						"typeArguments": [
							{
								"type": "reference",
								"id": 281,
								"name": "V"
							}
						],
						"name": "Store"
					}
				},
				{
					"id": 299,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 37,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L37"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 281,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 253,
					"name": "initialPoseidonHashRoot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initial empty tree root based on poseidon hash algorithm"
							}
						],
						"blockTags": [
							{
								"tag": "@static",
								"content": []
							},
							{
								"tag": "@memberof",
								"content": [
									{
										"kind": "text",
										"text": "SparseMerkleTree"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 28,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					},
					"defaultValue": "..."
				},
				{
					"id": 322,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 300,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L300"
						}
					],
					"signatures": [
						{
							"id": 323,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 324,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 311,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L311"
						}
					],
					"signatures": [
						{
							"id": 325,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a value from tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 326,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 307,
					"name": "depth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 214,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L214"
						}
					],
					"signatures": [
						{
							"id": 308,
							"name": "depth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the depth of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{number}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 343,
					"name": "digest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 376,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L376"
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "digest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 345,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 316,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 258,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L258"
						}
					],
					"signatures": [
						{
							"id": 317,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for a key from the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{(Promise<V | null>)}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 318,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 281,
												"name": "V"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 314,
					"name": "getHasher",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 247,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L247"
						}
					],
					"signatures": [
						{
							"id": 315,
							"name": "getHasher",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the hasher function used by the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Hasher}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Hasher"
							}
						}
					]
				},
				{
					"id": 300,
					"name": "getKeyField",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 171,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L171"
						}
					],
					"signatures": [
						{
							"id": 301,
							"name": "getKeyField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 302,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 303,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 193,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L193"
						}
					],
					"signatures": [
						{
							"id": 304,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Field}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 312,
					"name": "getStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 237,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 313,
							"name": "getStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the data store of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Store<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 5,
								"typeArguments": [
									{
										"type": "reference",
										"id": 281,
										"name": "V"
									}
								],
								"name": "Store"
							}
						}
					]
				},
				{
					"id": 319,
					"name": "has",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 285,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L285"
						}
					],
					"signatures": [
						{
							"id": 320,
							"name": "has",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the key exists in the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<boolean>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 321,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 305,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 203,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L203"
						}
					],
					"signatures": [
						{
							"id": 306,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the tree is empty."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{boolean}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 337,
					"name": "prove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 360,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L360"
						}
					],
					"signatures": [
						{
							"id": 338,
							"name": "prove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<SparseMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 339,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 340,
					"name": "proveCompact",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 371,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L371"
						}
					],
					"signatures": [
						{
							"id": 341,
							"name": "proveCompact",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a compacted merkle proof for a key against the current root."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<SparseCompactMerkleProof>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 342,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 593,
										"name": "SparseCompactMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 366,
					"name": "proveForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 499,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L499"
						}
					],
					"signatures": [
						{
							"id": 367,
							"name": "proveForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 368,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 369,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 431,
										"name": "SparseMerkleProof"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 309,
					"name": "setRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 224,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L224"
						}
					],
					"signatures": [
						{
							"id": 310,
							"name": "setRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 311,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 358,
					"name": "sideNodesForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 460,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L460"
						}
					],
					"signatures": [
						{
							"id": 359,
							"name": "sideNodesForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 360,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 361,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 362,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 365,
													"name": "leafData",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 463,
															"character": 55,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L463"
														}
													],
													"type": {
														"type": "reference",
														"name": "Field",
														"qualifiedName": "Field",
														"package": "o1js"
													}
												},
												{
													"id": 364,
													"name": "pathNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 463,
															"character": 35,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L463"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												},
												{
													"id": 363,
													"name": "sideNodes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 463,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L463"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Field",
															"qualifiedName": "Field",
															"package": "o1js"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														365,
														364,
														363
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/smt.ts",
													"line": 463,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L463"
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 327,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 323,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L323"
						}
					],
					"signatures": [
						{
							"id": 328,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update a new value for a key in the tree and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 329,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								},
								{
									"id": 330,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 281,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 331,
					"name": "updateAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 340,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L340"
						}
					],
					"signatures": [
						{
							"id": 332,
							"name": "updateAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update multiple leaves and return the new root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 333,
									"name": "kvs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 334,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 335,
														"name": "key",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/lib/smt/smt.ts",
																"line": 340,
																"character": 32,
																"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L340"
															}
														],
														"type": {
															"type": "reference",
															"id": 280,
															"name": "K"
														}
													},
													{
														"id": 336,
														"name": "value",
														"kind": 1024,
														"kindString": "Property",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "src/lib/smt/smt.ts",
																"line": 340,
																"character": 40,
																"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L340"
															}
														],
														"type": {
															"type": "reference",
															"id": 281,
															"name": "V"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															335,
															336
														]
													}
												],
												"sources": [
													{
														"fileName": "src/lib/smt/smt.ts",
														"line": 340,
														"character": 30,
														"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L340"
													}
												]
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 346,
					"name": "updateForRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 380,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L380"
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "updateForRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 348,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 349,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 280,
										"name": "K"
									}
								},
								{
									"id": 350,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 281,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 351,
					"name": "updateWithSideNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 402,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L402"
						}
					],
					"signatures": [
						{
							"id": 352,
							"name": "updateWithSideNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 353,
									"name": "sideNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 354,
									"name": "pathNodes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 355,
									"name": "oldLeafData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 356,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 357,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 281,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 254,
					"name": "build",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 58,
							"character": 22,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L58"
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "build",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Build a new sparse merkle tree"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<SparseMerkleTree<K, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 256,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 257,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 258,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 257,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 259,
									"name": "KeyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 256,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 260,
									"name": "ValueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 257,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 261,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 262,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 264,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 62,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L62"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 265,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 62,
															"character": 51,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L62"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 263,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 62,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L62"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														264,
														265,
														263
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/smt.ts",
													"line": 62,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L62"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 252,
										"typeArguments": [
											{
												"type": "reference",
												"id": 256,
												"name": "K"
											},
											{
												"type": "reference",
												"id": 257,
												"name": "V"
											}
										],
										"name": "SparseMerkleTree"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 266,
					"name": "import",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/smt/smt.ts",
							"line": 121,
							"character": 22,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L121"
						}
					],
					"signatures": [
						{
							"id": 267,
							"name": "import",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Import a sparse merkle tree via existing store"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<SparseMerkleTree<K, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "SparseMerkleTree"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 268,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 269,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 270,
									"name": "store",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 5,
										"typeArguments": [
											{
												"type": "reference",
												"id": 269,
												"name": "V"
											}
										],
										"name": "Store"
									}
								},
								{
									"id": 271,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 268,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 272,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 269,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 273,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 274,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 276,
													"name": "hashKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 125,
															"character": 32,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L125"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 277,
													"name": "hashValue",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 125,
															"character": 51,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L125"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 275,
													"name": "hasher",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/lib/smt/smt.ts",
															"line": 125,
															"character": 15,
															"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L125"
														}
													],
													"type": {
														"type": "reference",
														"id": 1,
														"name": "Hasher"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														276,
														277,
														275
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/smt/smt.ts",
													"line": 125,
													"character": 13,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L125"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 252,
										"typeArguments": [
											{
												"type": "reference",
												"id": 268,
												"name": "K"
											},
											{
												"type": "reference",
												"id": 269,
												"name": "V"
											}
										],
										"name": "SparseMerkleTree"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						278
					]
				},
				{
					"title": "Properties",
					"children": [
						294,
						293,
						298,
						291,
						292,
						299,
						253
					]
				},
				{
					"title": "Methods",
					"children": [
						322,
						324,
						307,
						343,
						316,
						314,
						300,
						303,
						312,
						319,
						305,
						337,
						340,
						366,
						309,
						358,
						327,
						331,
						346,
						351,
						254,
						266
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/smt/smt.ts",
					"line": 21,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/smt.ts#L21"
				}
			],
			"typeParameters": [
				{
					"id": 370,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 371,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 1774,
			"name": "SparseTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Merkle tree implementation that uses a LevelDB database to store the tree."
					}
				]
			},
			"children": [
				{
					"id": 1775,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 1776,
							"name": "new SparseTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1777,
									"name": "db",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "Level",
										"qualifiedName": "Level",
										"package": "level"
									}
								},
								{
									"id": 1778,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Hasher"
									}
								},
								{
									"id": 1779,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1780,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1781,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									},
									"defaultValue": "..."
								},
								{
									"id": 1782,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1774,
								"name": "SparseTree"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.constructor"
					}
				},
				{
					"id": 1788,
					"name": "cachedSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 40,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.cachedSize"
					}
				},
				{
					"id": 1789,
					"name": "db",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 46,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L46"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						],
						"name": "Level",
						"qualifiedName": "Level",
						"package": "level"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.db"
					}
				},
				{
					"id": 1790,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 47,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L47"
						}
					],
					"type": {
						"type": "reference",
						"name": "Hasher"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.hasher"
					}
				},
				{
					"id": 1787,
					"name": "maxIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 39,
							"character": 21,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L39"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.maxIndex"
					}
				},
				{
					"id": 1791,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 50,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.size"
					}
				},
				{
					"id": 1814,
					"name": "addLeafToCacheAndHashToRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 197,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L197"
						}
					],
					"signatures": [
						{
							"id": 1815,
							"name": "addLeafToCacheAndHashToRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a leaf and all the hashes above it to the cache."
									}
								]
							},
							"parameters": [
								{
									"id": 1816,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Leaf to add to cache."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1817,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Index of the leaf (used to derive the cache key)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.addLeafToCacheAndHashToRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.addLeafToCacheAndHashToRoot"
					}
				},
				{
					"id": 1806,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 146,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 1807,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commits the changes to the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.commit"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1761,
								"name": "UpdateOnlyTree.commit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.commit"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1760,
						"name": "UpdateOnlyTree.commit"
					}
				},
				{
					"id": 1800,
					"name": "getDepth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 107,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L107"
						}
					],
					"signatures": [
						{
							"id": 1801,
							"name": "getDepth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the depth of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The depth of the tree."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getDepth"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1763,
								"name": "UpdateOnlyTree.getDepth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getDepth"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1762,
						"name": "UpdateOnlyTree.getDepth"
					}
				},
				{
					"id": 1810,
					"name": "getLeafValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 177,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L177"
						}
					],
					"signatures": [
						{
							"id": 1811,
							"name": "getLeafValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the value at the given index."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Leaf value at the given index or undefined."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1812,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1813,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates whether to include uncommitted changes."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getLeafValue"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1767,
								"name": "UpdateOnlyTree.getLeafValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getLeafValue"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1766,
						"name": "UpdateOnlyTree.getLeafValue"
					}
				},
				{
					"id": 1798,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 99,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 1799,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the name of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The name of the tree."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getName"
					}
				},
				{
					"id": 1795,
					"name": "getNumLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 91,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L91"
						}
					],
					"signatures": [
						{
							"id": 1796,
							"name": "getNumLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of leaves in the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of leaves in the tree."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1797,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the returned number of leaves includes uncomitted changes."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getNumLeaves"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1758,
								"name": "UpdateOnlyTree.getNumLeaves"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getNumLeaves"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1757,
						"name": "UpdateOnlyTree.getNumLeaves"
					}
				},
				{
					"id": 1792,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 73,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 1793,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The root of the tree."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1794,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, root incorporating uncomitted changes is returned."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getRoot"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1755,
								"name": "UpdateOnlyTree.getRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getRoot"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1754,
						"name": "UpdateOnlyTree.getRoot"
					}
				},
				{
					"id": 1802,
					"name": "getSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 118,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L118"
						}
					],
					"signatures": [
						{
							"id": 1803,
							"name": "getSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a sibling path for the element at the given index."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A sibling path for the element at the given index.\r\nNote: The sibling path is an array of sibling hashes, with the lowest hash (leaf hash) first, and the highest hash last."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1804,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the element."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1805,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates whether to get a sibling path incorporating uncommitted changes."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getSiblingPath"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1771,
								"name": "UpdateOnlyTree.getSiblingPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getSiblingPath"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1770,
						"name": "UpdateOnlyTree.getSiblingPath"
					}
				},
				{
					"id": 1818,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 265,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L265"
						}
					],
					"signatures": [
						{
							"id": 1819,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1820,
									"name": "prefilledSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A number of leaves that are prefilled with values."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.init"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.init"
					}
				},
				{
					"id": 1821,
					"name": "initFromDb",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 273,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L273"
						}
					],
					"signatures": [
						{
							"id": 1822,
							"name": "initFromDb",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the tree from the database."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.initFromDb"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.initFromDb"
					}
				},
				{
					"id": 1808,
					"name": "rollback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 166,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L166"
						}
					],
					"signatures": [
						{
							"id": 1809,
							"name": "rollback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rolls back the not-yet-committed changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.rollback"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1765,
								"name": "UpdateOnlyTree.rollback"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.rollback"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1764,
						"name": "UpdateOnlyTree.rollback"
					}
				},
				{
					"id": 1783,
					"name": "updateLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/sparse_tree/sparse_tree.ts",
							"line": 14,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/sparse_tree/sparse_tree.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 1784,
							"name": "updateLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Updates a leaf in the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1785,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New contents of the leaf."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1786,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Index of the leaf to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1751,
								"name": "UpdateOnlyTree.updateLeaf"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1750,
						"name": "UpdateOnlyTree.updateLeaf"
					}
				},
				{
					"id": 1823,
					"name": "writeMeta",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 281,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L281"
						}
					],
					"signatures": [
						{
							"id": 1824,
							"name": "writeMeta",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Writes meta data to the provided batch."
									}
								]
							},
							"parameters": [
								{
									"id": 1825,
									"name": "batch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The batch to which to write the meta data."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												],
												"name": "Level",
												"qualifiedName": "Level",
												"package": "level"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "ChainedBatch",
										"qualifiedName": "ChainedBatch",
										"package": "level"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.writeMeta"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.writeMeta"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1775
					]
				},
				{
					"title": "Properties",
					"children": [
						1788,
						1789,
						1790,
						1787,
						1791
					]
				},
				{
					"title": "Methods",
					"children": [
						1814,
						1806,
						1800,
						1810,
						1798,
						1795,
						1792,
						1802,
						1818,
						1821,
						1808,
						1783,
						1823
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/sparse_tree/sparse_tree.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/sparse_tree/sparse_tree.ts#L8"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "TreeBase"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 1749,
					"name": "UpdateOnlyTree"
				}
			]
		},
		{
			"id": 1830,
			"name": "StandardIndexedTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Indexed merkle tree."
					}
				]
			},
			"children": [
				{
					"id": 1831,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 1832,
							"name": "new StandardIndexedTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1833,
									"name": "db",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "Level",
										"qualifiedName": "Level",
										"package": "level"
									}
								},
								{
									"id": 1834,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Hasher"
									}
								},
								{
									"id": 1835,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1836,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1837,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									},
									"defaultValue": "..."
								},
								{
									"id": 1838,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1830,
								"name": "StandardIndexedTree"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.constructor"
					}
				},
				{
					"id": 1840,
					"name": "cachedLeaves",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 89,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L89"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1841,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
									"line": 89,
									"character": 26,
									"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L89"
								}
							],
							"indexSignature": {
								"id": 1842,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1843,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1674,
									"name": "LeafData"
								}
							}
						}
					},
					"defaultValue": "{}"
				},
				{
					"id": 1907,
					"name": "cachedSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 40,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.cachedSize"
					}
				},
				{
					"id": 1908,
					"name": "db",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 46,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L46"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						],
						"name": "Level",
						"qualifiedName": "Level",
						"package": "level"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.db"
					}
				},
				{
					"id": 1909,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 47,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L47"
						}
					],
					"type": {
						"type": "reference",
						"name": "Hasher"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.hasher"
					}
				},
				{
					"id": 1839,
					"name": "leaves",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 88,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L88"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 1674,
							"name": "LeafData"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 1906,
					"name": "maxIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 39,
							"character": 21,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L39"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.maxIndex"
					}
				},
				{
					"id": 1910,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 50,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.size"
					}
				},
				{
					"id": 1885,
					"name": "_updateLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 378,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L378"
						}
					],
					"signatures": [
						{
							"id": 1886,
							"name": "_updateLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Updates a leaf in the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1887,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New contents of the leaf."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1888,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Index of the leaf to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1925,
					"name": "addLeafToCacheAndHashToRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 197,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L197"
						}
					],
					"signatures": [
						{
							"id": 1926,
							"name": "addLeafToCacheAndHashToRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a leaf and all the hashes above it to the cache."
									}
								]
							},
							"parameters": [
								{
									"id": 1927,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Leaf to add to cache."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1928,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Index of the leaf (used to derive the cache key)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.addLeafToCacheAndHashToRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.addLeafToCacheAndHashToRoot"
					}
				},
				{
					"id": 1870,
					"name": "appendLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 219,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L219"
						}
					],
					"signatures": [
						{
							"id": 1871,
							"name": "appendLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends the given leaf to the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1872,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The leaf to append."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1844,
					"name": "appendLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 96,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L96"
						}
					],
					"signatures": [
						{
							"id": 1845,
							"name": "appendLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends the given leaves to the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1846,
									"name": "leaves",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The leaves to append."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1701,
								"name": "IndexedTree.appendLeaves"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1700,
						"name": "IndexedTree.appendLeaves"
					}
				},
				{
					"id": 1897,
					"name": "batchInsert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 549,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L549"
						}
					],
					"signatures": [
						{
							"id": 1898,
							"name": "batchInsert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each base rollup needs to provide non membership / inclusion proofs for each of the nullifier.\r\nThis method will return membership proofs and perform partial node updates that will\r\nallow the circuit to incrementally update the tree and perform a batch insertion.\r\n\r\nThis offers massive circuit performance savings over doing incremental insertions.\r\n\r\nA description of the algorithm can be found here: https://colab.research.google.com/drive/1A0gizduSi4FIiIJZ8OylwIpO9-OTqV-R\r\n\r\nWARNING: This function has side effects, it will insert values into the tree.\r\n\r\nAssumptions:\r\n1. There are 8 nullifiers provided and they are either unique or empty. (denoted as 0)\r\n2. If kc 0 has 1 nullifier, and kc 1 has 3 nullifiers the layout will assume to be the sparse\r\n  nullifier layout: [kc0-0, 0, 0, 0, kc1-0, kc1-1, kc1-2, 0]\r\n\r\nAlgorithm overview\r\n\r\nIn general, if we want to batch insert items, we first to update their low nullifier to point to them,\r\nthen batch insert all of the values as at once in the final step.\r\nTo update a low nullifier, we provide an insertion proof that the low nullifier currently exists to the\r\ncircuit, then update the low nullifier.\r\nUpdating this low nullifier will in turn change the root of the tree. Therefore future low nullifier insertion proofs\r\nmust be given against this new root.\r\nAs a result, each low nullifier membership proof will be provided against an intermediate tree state, each with differing\r\nroots.\r\n\r\nThis become tricky when two items that are being batch inserted need to update the same low nullifier, or need to use\r\na value that is part of the same batch insertion as their low nullifier. In this case a zero low nullifier path is given\r\nto the circuit, and it must determine from the set of batch inserted values if the insertion is valid.\r\n\r\nThe following example will illustrate attempting to insert 2,3,20,19 into a tree already containing 0,5,10,15\r\n\r\nThe example will explore two cases. In each case the values low nullifier will exist within the batch insertion,\r\nOne where the low nullifier comes before the item in the set (2,3), and one where it comes after (20,19).\r\n\r\nThe original tree:                       Pending insertion subtree\r\n\r\n index     0       2       3       4         -       -       -       -\r\n -------------------------------------      ----------------------------\r\n val       0       5      10      15         -       -       -       -\r\n nextIdx   1       2       3       0         -       -       -       -\r\n nextVal   5      10      15       0         -       -       -       -\r\n\r\n\r\nInserting 2: (happy path)\r\n1. Find the low nullifier (0) - provide inclusion proof\r\n2. Update its pointers\r\n3. Insert 2 into the pending subtree\r\n\r\n index     0       2       3       4         5       -       -       -\r\n -------------------------------------      ----------------------------\r\n val       0       5      10      15         2       -       -       -\r\n nextIdx   5       2       3       0         2       -       -       -\r\n nextVal   2      10      15       0         5       -       -       -\r\n\r\nInserting 3: The low nullifier exists within the insertion current subtree\r\n1. When looking for the low nullifier for 3, we will receive 0 again as we have not inserted 2 into the main tree\r\n   This is problematic, as we cannot use either 0 or 2 as our inclusion proof.\r\n   Why cant we?\r\n     - Index 0 has a val 0 and nextVal of 2. This is NOT enough to prove non inclusion of 2.\r\n     - Our existing tree is in a state where we cannot prove non inclusion of 3.\r\n   We do not provide a non inclusion proof to out circuit, but prompt it to look within the insertion subtree.\r\n2. Update pending insertion subtree\r\n3. Insert 3 into pending subtree\r\n\r\n(no inclusion proof provided)\r\n index     0       2       3       4         5       6       -       -\r\n -------------------------------------      ----------------------------\r\n val       0       5      10      15         2       3       -       -\r\n nextIdx   5       2       3       0         6       2       -       -\r\n nextVal   2      10      15       0         3       5       -       -\r\n\r\nInserting 20: (happy path)\r\n1. Find the low nullifier (15) - provide inculsion proof\r\n2. Update its pointers\r\n3. Insert 20 into the pending subtree\r\n\r\n index     0       2       3       4         5       6       7       -\r\n -------------------------------------      ----------------------------\r\n val       0       5      10      15         2       3      20       -\r\n nextIdx   5       2       3       7         6       2       0       -\r\n nextVal   2      10      15      20         3       5       0       -\r\n\r\nInserting 19:\r\n1. In this case we can find a low nullifier, but we are updating a low nullifier that has already been updated\r\n   We can provide an inclusion proof of this intermediate tree state.\r\n2. Update its pointers\r\n3. Insert 19 into the pending subtree\r\n\r\n index     0       2       3       4         5       6       7       8\r\n -------------------------------------      ----------------------------\r\n val       0       5      10      15         2       3      20       19\r\n nextIdx   5       2       3       8         6       2       0       7\r\n nextVal   2      10      15      19         3       5       0       20\r\n\r\nPerform subtree insertion\r\n\r\n index     0       2       3       4       5       6       7       8\r\n ---------------------------------------------------------------------\r\n val       0       5      10      15       2       3      20       19\r\n nextIdx   5       2       3       8       6       2       0       7\r\n nextVal   2      10      15      19       3       5       0       20\r\n\r\nTODO: this implementation will change once the zero value is changed from h(0,0,0). Changes incoming over the next sprint"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The data for the leaves to be updated when inserting the new ones."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1899,
									"name": "leaves",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Values to insert into the tree."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 1900,
									"name": "treeHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Height of the tree."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1901,
									"name": "subtreeHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Height of the subtree."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1826,
															"name": "LowLeafWitnessData"
														}
													},
													{
														"type": "reference",
														"id": 1999,
														"name": "BaseSiblingPath"
													}
												]
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 1999,
														"name": "BaseSiblingPath"
													}
												]
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1695,
								"name": "IndexedTree.batchInsert"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1694,
						"name": "IndexedTree.batchInsert"
					}
				},
				{
					"id": 1883,
					"name": "clearCachedLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 368,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L368"
						}
					],
					"signatures": [
						{
							"id": 1884,
							"name": "clearCachedLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clears the cache."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1847,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 106,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L106"
						}
					],
					"signatures": [
						{
							"id": 1848,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commits the changes to the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "TreeBase.commit"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1710,
								"name": "IndexedTree.commit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "TreeBase.commit"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1709,
						"name": "IndexedTree.commit"
					}
				},
				{
					"id": 1881,
					"name": "commitLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 349,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L349"
						}
					],
					"signatures": [
						{
							"id": 1882,
							"name": "commitLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commits all the leaves to the database and removes them from a cache."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1859,
					"name": "findIndexOfPreviousValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 155,
							"character": 4,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L155"
						}
					],
					"signatures": [
						{
							"id": 1860,
							"name": "findIndexOfPreviousValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Finds the index of the largest leaf whose value is less than or equal to the provided value."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The found leaf index and a flag indicating if the corresponding leaf's value is equal to "
											},
											{
												"kind": "code",
												"text": "`newValue`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1861,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new value to be inserted into the tree."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1862,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the uncommitted changes are included in the search."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1863,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1865,
											"name": "alreadyPresent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A flag indicating if the corresponding leaf's value is equal to "
													},
													{
														"kind": "code",
														"text": "`newValue`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
													"line": 166,
													"character": 8,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L166"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1864,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The index of the found leaf."
													}
												]
											},
											"sources": [
												{
													"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
													"line": 162,
													"character": 8,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L162"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1865,
												1864
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
											"line": 158,
											"character": 7,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L158"
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"id": 1680,
								"name": "IndexedTree.findIndexOfPreviousValue"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1679,
						"name": "IndexedTree.findIndexOfPreviousValue"
					}
				},
				{
					"id": 1873,
					"name": "findMinIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 272,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L272"
						}
					],
					"signatures": [
						{
							"id": 1874,
							"name": "findMinIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Finds the index of the minimum value in an array."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The index of the minimum value in the array."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1875,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The collection of values to be searched."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "bigint"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1919,
					"name": "getDepth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 107,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L107"
						}
					],
					"signatures": [
						{
							"id": 1920,
							"name": "getDepth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the depth of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The depth of the tree."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getDepth"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1712,
								"name": "IndexedTree.getDepth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getDepth"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1711,
						"name": "IndexedTree.getDepth"
					}
				},
				{
					"id": 1866,
					"name": "getLatestLeafDataCopy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 198,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L198"
						}
					],
					"signatures": [
						{
							"id": 1867,
							"name": "getLatestLeafDataCopy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "!! MUST call 'findIndexOfPreviousValue(*)' to find the 'index' FIRST, and later call this method. By coldStar1993#6265 !!\r\nGets the latest LeafData copy."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A copy of the leaf data at the given index or undefined if the leaf was not found."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1868,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Index of the leaf of which to obtain the LeafData copy."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1869,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the uncommitted changes are included in the search."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1674,
										"name": "LeafData"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"id": 1687,
								"name": "IndexedTree.getLatestLeafDataCopy"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1686,
						"name": "IndexedTree.getLatestLeafDataCopy"
					}
				},
				{
					"id": 1851,
					"name": "getLeafValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 127,
							"character": 11,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L127"
						}
					],
					"signatures": [
						{
							"id": 1852,
							"name": "getLeafValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "!! MUST call 'findIndexOfPreviousValue(*)' to find the 'index' FIRST, and later call this method. By coldStar1993#6265 !!\r\nGets the value of the leaf at the given index."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The value of the leaf at the given index or undefined if the leaf is empty."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1853,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Index of the leaf of which to obtain the value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1854,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates whether to include uncommitted leaves in the computation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "TreeBase.getLeafValue"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1716,
								"name": "IndexedTree.getLeafValue"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "TreeBase.getLeafValue"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1715,
						"name": "IndexedTree.getLeafValue"
					}
				},
				{
					"id": 1917,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 99,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 1918,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the name of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The name of the tree."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getName"
					}
				},
				{
					"id": 1914,
					"name": "getNumLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 91,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L91"
						}
					],
					"signatures": [
						{
							"id": 1915,
							"name": "getNumLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of leaves in the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of leaves in the tree."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1916,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the returned number of leaves includes uncomitted changes."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getNumLeaves"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1707,
								"name": "IndexedTree.getNumLeaves"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getNumLeaves"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1706,
						"name": "IndexedTree.getNumLeaves"
					}
				},
				{
					"id": 1855,
					"name": "getPureLeafValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 141,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L141"
						}
					],
					"signatures": [
						{
							"id": 1856,
							"name": "getPureLeafValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "obtain the current pure leaf value on underlying (Standard) merkle tree. it maybe the default value: Field('0') if 'index' beyond 'getNumLeaves(includeUncommitted)', or else the hash of coorresponding leafData."
									}
								]
							},
							"parameters": [
								{
									"id": 1857,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1858,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1911,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 73,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 1912,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The root of the tree."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1913,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, root incorporating uncomitted changes is returned."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getRoot"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1704,
								"name": "IndexedTree.getRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getRoot"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1703,
						"name": "IndexedTree.getRoot"
					}
				},
				{
					"id": 1921,
					"name": "getSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 118,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L118"
						}
					],
					"signatures": [
						{
							"id": 1922,
							"name": "getSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a sibling path for the element at the given index."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A sibling path for the element at the given index.\r\nNote: The sibling path is an array of sibling hashes, with the lowest hash (leaf hash) first, and the highest hash last."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1923,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the element."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1924,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates whether to get a sibling path incorporating uncommitted changes."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getSiblingPath"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1720,
								"name": "IndexedTree.getSiblingPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getSiblingPath"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1719,
						"name": "IndexedTree.getSiblingPath"
					}
				},
				{
					"id": 1902,
					"name": "getSubtreeSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 675,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L675"
						}
					],
					"signatures": [
						{
							"id": 1903,
							"name": "getSubtreeSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1904,
									"name": "subtreeHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1905,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1876,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 290,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L290"
						}
					],
					"signatures": [
						{
							"id": 1877,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1878,
									"name": "prefilledSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A number of leaves that are prefilled with values."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "TreeBase.init"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "TreeBase.init"
					}
				},
				{
					"id": 1879,
					"name": "initFromDb",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 305,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L305"
						}
					],
					"signatures": [
						{
							"id": 1880,
							"name": "initFromDb",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Loads Merkle tree data from a database and assigns them to this object."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "TreeBase.initFromDb"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "TreeBase.initFromDb"
					}
				},
				{
					"id": 1849,
					"name": "rollback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 115,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L115"
						}
					],
					"signatures": [
						{
							"id": 1850,
							"name": "rollback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rolls back the not-yet-committed changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "TreeBase.rollback"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1714,
								"name": "IndexedTree.rollback"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "TreeBase.rollback"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1713,
						"name": "IndexedTree.rollback"
					}
				},
				{
					"id": 1893,
					"name": "updateLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 423,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L423"
						}
					],
					"signatures": [
						{
							"id": 1894,
							"name": "updateLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Exposes the underlying tree's update leaf method."
									}
								]
							},
							"parameters": [
								{
									"id": 1895,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hash to set at the leaf."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1674,
										"name": "LeafData"
									}
								},
								{
									"id": 1896,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the element."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1691,
								"name": "IndexedTree.updateLeaf"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1690,
						"name": "IndexedTree.updateLeaf"
					}
				},
				{
					"id": 1889,
					"name": "updateLeafWithNoValueCheck",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 397,
							"character": 17,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L397"
						}
					],
					"signatures": [
						{
							"id": 1890,
							"name": "updateLeafWithNoValueCheck",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Exposes the underlying tree's update leaf method."
									}
								]
							},
							"parameters": [
								{
									"id": 1891,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hash to set at the leaf."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1674,
										"name": "LeafData"
									}
								},
								{
									"id": 1892,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the element."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1929,
					"name": "writeMeta",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 281,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L281"
						}
					],
					"signatures": [
						{
							"id": 1930,
							"name": "writeMeta",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Writes meta data to the provided batch."
									}
								]
							},
							"parameters": [
								{
									"id": 1931,
									"name": "batch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The batch to which to write the meta data."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												],
												"name": "Level",
												"qualifiedName": "Level",
												"package": "level"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "ChainedBatch",
										"qualifiedName": "ChainedBatch",
										"package": "level"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.writeMeta"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.writeMeta"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1831
					]
				},
				{
					"title": "Properties",
					"children": [
						1840,
						1907,
						1908,
						1909,
						1839,
						1906,
						1910
					]
				},
				{
					"title": "Methods",
					"children": [
						1885,
						1925,
						1870,
						1844,
						1897,
						1883,
						1847,
						1881,
						1859,
						1873,
						1919,
						1866,
						1851,
						1917,
						1914,
						1855,
						1911,
						1921,
						1902,
						1876,
						1879,
						1849,
						1893,
						1889,
						1929
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
					"line": 86,
					"character": 13,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L86"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "TreeBase"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 1678,
					"name": "IndexedTree"
				}
			]
		},
		{
			"id": 1932,
			"name": "StandardTree",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Merkle tree implementation that uses a LevelDB database to store the tree."
					}
				]
			},
			"children": [
				{
					"id": 1933,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 1934,
							"name": "new StandardTree",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1935,
									"name": "db",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "Level",
										"qualifiedName": "Level",
										"package": "level"
									}
								},
								{
									"id": 1936,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Hasher"
									}
								},
								{
									"id": 1937,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1938,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1939,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									},
									"defaultValue": "..."
								},
								{
									"id": 1940,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1932,
								"name": "StandardTree"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.constructor"
					}
				},
				{
					"id": 1945,
					"name": "cachedSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 40,
							"character": 12,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.cachedSize"
					}
				},
				{
					"id": 1946,
					"name": "db",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 46,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L46"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						],
						"name": "Level",
						"qualifiedName": "Level",
						"package": "level"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.db"
					}
				},
				{
					"id": 1947,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 47,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L47"
						}
					],
					"type": {
						"type": "reference",
						"name": "Hasher"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.hasher"
					}
				},
				{
					"id": 1944,
					"name": "maxIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 39,
							"character": 21,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L39"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.maxIndex"
					}
				},
				{
					"id": 1948,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 50,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.size"
					}
				},
				{
					"id": 1971,
					"name": "addLeafToCacheAndHashToRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 197,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L197"
						}
					],
					"signatures": [
						{
							"id": 1972,
							"name": "addLeafToCacheAndHashToRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a leaf and all the hashes above it to the cache."
									}
								]
							},
							"parameters": [
								{
									"id": 1973,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Leaf to add to cache."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1974,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Index of the leaf (used to derive the cache key)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.addLeafToCacheAndHashToRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.addLeafToCacheAndHashToRoot"
					}
				},
				{
					"id": 1941,
					"name": "appendLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_tree/standard_tree.ts",
							"line": 14,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_tree/standard_tree.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 1942,
							"name": "appendLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends the given leaves to the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1943,
									"name": "leaves",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The leaves to append."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1652,
								"name": "AppendOnlyTree.appendLeaves"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"id": 1651,
						"name": "AppendOnlyTree.appendLeaves"
					}
				},
				{
					"id": 1963,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 146,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 1964,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commits the changes to the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.commit"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1661,
								"name": "AppendOnlyTree.commit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.commit"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1660,
						"name": "AppendOnlyTree.commit"
					}
				},
				{
					"id": 1957,
					"name": "getDepth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 107,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L107"
						}
					],
					"signatures": [
						{
							"id": 1958,
							"name": "getDepth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the depth of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The depth of the tree."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getDepth"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1663,
								"name": "AppendOnlyTree.getDepth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getDepth"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1662,
						"name": "AppendOnlyTree.getDepth"
					}
				},
				{
					"id": 1967,
					"name": "getLeafValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 177,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L177"
						}
					],
					"signatures": [
						{
							"id": 1968,
							"name": "getLeafValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the value at the given index."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Leaf value at the given index or undefined."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1969,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1970,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates whether to include uncommitted changes."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getLeafValue"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1667,
								"name": "AppendOnlyTree.getLeafValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getLeafValue"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1666,
						"name": "AppendOnlyTree.getLeafValue"
					}
				},
				{
					"id": 1955,
					"name": "getName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 99,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 1956,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the name of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The name of the tree."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getName"
					}
				},
				{
					"id": 1952,
					"name": "getNumLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 91,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L91"
						}
					],
					"signatures": [
						{
							"id": 1953,
							"name": "getNumLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of leaves in the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of leaves in the tree."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1954,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the returned number of leaves includes uncomitted changes."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getNumLeaves"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1658,
								"name": "AppendOnlyTree.getNumLeaves"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getNumLeaves"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1657,
						"name": "AppendOnlyTree.getNumLeaves"
					}
				},
				{
					"id": 1949,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 73,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 1950,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the root of the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The root of the tree."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1951,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, root incorporating uncomitted changes is returned."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getRoot"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1655,
								"name": "AppendOnlyTree.getRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getRoot"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1654,
						"name": "AppendOnlyTree.getRoot"
					}
				},
				{
					"id": 1959,
					"name": "getSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 118,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L118"
						}
					],
					"signatures": [
						{
							"id": 1960,
							"name": "getSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a sibling path for the element at the given index."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A sibling path for the element at the given index.\r\nNote: The sibling path is an array of sibling hashes, with the lowest hash (leaf hash) first, and the highest hash last."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1961,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the element."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1962,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates whether to get a sibling path incorporating uncommitted changes."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.getSiblingPath"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1671,
								"name": "AppendOnlyTree.getSiblingPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.getSiblingPath"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1670,
						"name": "AppendOnlyTree.getSiblingPath"
					}
				},
				{
					"id": 1975,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 265,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L265"
						}
					],
					"signatures": [
						{
							"id": 1976,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the tree."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1977,
									"name": "prefilledSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A number of leaves that are prefilled with values."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.init"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.init"
					}
				},
				{
					"id": 1978,
					"name": "initFromDb",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 273,
							"character": 15,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L273"
						}
					],
					"signatures": [
						{
							"id": 1979,
							"name": "initFromDb",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the tree from the database."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.initFromDb"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.initFromDb"
					}
				},
				{
					"id": 1965,
					"name": "rollback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 166,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L166"
						}
					],
					"signatures": [
						{
							"id": 1966,
							"name": "rollback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rolls back the not-yet-committed changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Empty promise."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.rollback"
							},
							"implementationOf": {
								"type": "reference",
								"id": 1665,
								"name": "AppendOnlyTree.rollback"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.rollback"
					},
					"implementationOf": {
						"type": "reference",
						"id": 1664,
						"name": "AppendOnlyTree.rollback"
					}
				},
				{
					"id": 1980,
					"name": "writeMeta",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/tree_base.ts",
							"line": 281,
							"character": 18,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L281"
						}
					],
					"signatures": [
						{
							"id": 1981,
							"name": "writeMeta",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Writes meta data to the provided batch."
									}
								]
							},
							"parameters": [
								{
									"id": 1982,
									"name": "batch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The batch to which to write the meta data."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer",
														"qualifiedName": "global.Buffer",
														"package": "@types/node"
													}
												],
												"name": "Level",
												"qualifiedName": "Level",
												"package": "level"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										],
										"name": "ChainedBatch",
										"qualifiedName": "ChainedBatch",
										"package": "level"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TreeBase.writeMeta"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "TreeBase.writeMeta"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1933
					]
				},
				{
					"title": "Properties",
					"children": [
						1945,
						1946,
						1947,
						1944,
						1948
					]
				},
				{
					"title": "Methods",
					"children": [
						1971,
						1941,
						1963,
						1957,
						1967,
						1955,
						1952,
						1949,
						1959,
						1975,
						1978,
						1965,
						1980
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/standard_tree/standard_tree.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_tree/standard_tree.ts#L8"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "TreeBase"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"id": 1650,
					"name": "AppendOnlyTree"
				}
			]
		},
		{
			"id": 1209,
			"name": "TreeHasher",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Tree Hasher"
					}
				]
			},
			"children": [
				{
					"id": 1216,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 1217,
							"name": "new TreeHasher",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an instance of TreeHasher."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "TreeHasher"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1218,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1219,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1220,
									"name": "hasher",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "Hasher"
									},
									"defaultValue": "Poseidon.hash"
								},
								{
									"id": 1221,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1218,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1222,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1219,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1209,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1218,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 1219,
										"name": "V"
									}
								],
								"name": "TreeHasher"
							}
						}
					]
				},
				{
					"id": 1223,
					"name": "hasher",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 20,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "Hasher"
					}
				},
				{
					"id": 1224,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 21,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L21"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1218,
								"name": "K"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 1225,
					"name": "valueType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 22,
							"character": 10,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1219,
								"name": "V"
							}
						],
						"name": "Provable",
						"qualifiedName": "Provable",
						"package": "o1js"
					}
				},
				{
					"id": 1234,
					"name": "digestLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 71,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L71"
						}
					],
					"signatures": [
						{
							"id": 1235,
							"name": "digestLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1236,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1237,
									"name": "leafData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1238,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1239,
											"name": "hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/tree_hasher.ts",
													"line": 71,
													"character": 46,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L71"
												}
											],
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 1240,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/tree_hasher.ts",
													"line": 71,
													"character": 59,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L71"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Field",
													"qualifiedName": "Field",
													"package": "o1js"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1239,
												1240
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/compact_smt/tree_hasher.ts",
											"line": 71,
											"character": 44,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L71"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1258,
					"name": "digestNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 103,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L103"
						}
					],
					"signatures": [
						{
							"id": 1259,
							"name": "digestNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1260,
									"name": "leftData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1261,
									"name": "rightData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1262,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1263,
											"name": "hash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/tree_hasher.ts",
													"line": 106,
													"character": 7,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L106"
												}
											],
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 1264,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/tree_hasher.ts",
													"line": 106,
													"character": 20,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L106"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Field",
													"qualifiedName": "Field",
													"package": "o1js"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1263,
												1264
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/compact_smt/tree_hasher.ts",
											"line": 106,
											"character": 5,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L106"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1226,
					"name": "digestValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 59,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L59"
						}
					],
					"signatures": [
						{
							"id": 1227,
							"name": "digestValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1228,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1219,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1256,
					"name": "emptyData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 99,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 1257,
							"name": "emptyData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Field",
									"qualifiedName": "Field",
									"package": "o1js"
								}
							}
						}
					]
				},
				{
					"id": 1232,
					"name": "getHasher",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 67,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L67"
						}
					],
					"signatures": [
						{
							"id": 1233,
							"name": "getHasher",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Hasher"
							}
						}
					]
				},
				{
					"id": 1250,
					"name": "isEmptyData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 91,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L91"
						}
					],
					"signatures": [
						{
							"id": 1251,
							"name": "isEmptyData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1252,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1253,
					"name": "isEmptyDataInCircuit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 95,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L95"
						}
					],
					"signatures": [
						{
							"id": 1254,
							"name": "isEmptyDataInCircuit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1255,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Bool",
								"qualifiedName": "Bool",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1247,
					"name": "isLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 87,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L87"
						}
					],
					"signatures": [
						{
							"id": 1248,
							"name": "isLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1249,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1241,
					"name": "parseLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 80,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L80"
						}
					],
					"signatures": [
						{
							"id": 1242,
							"name": "parseLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1243,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1244,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1246,
											"name": "leaf",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/tree_hasher.ts",
													"line": 80,
													"character": 43,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L80"
												}
											],
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 1245,
											"name": "path",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/tree_hasher.ts",
													"line": 80,
													"character": 30,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L80"
												}
											],
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1246,
												1245
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/compact_smt/tree_hasher.ts",
											"line": 80,
											"character": 28,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L80"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1265,
					"name": "parseNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 115,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L115"
						}
					],
					"signatures": [
						{
							"id": 1266,
							"name": "parseNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1267,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1268,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1269,
											"name": "leftNode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/tree_hasher.ts",
													"line": 115,
													"character": 30,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L115"
												}
											],
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										},
										{
											"id": 1270,
											"name": "rightNode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/compact_smt/tree_hasher.ts",
													"line": 115,
													"character": 47,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L115"
												}
											],
											"type": {
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1269,
												1270
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/compact_smt/tree_hasher.ts",
											"line": 115,
											"character": 28,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L115"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1229,
					"name": "path",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 63,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L63"
						}
					],
					"signatures": [
						{
							"id": 1230,
							"name": "path",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1231,
									"name": "k",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1218,
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1210,
					"name": "poseidon",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/tree_hasher.ts",
							"line": 52,
							"character": 9,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L52"
						}
					],
					"signatures": [
						{
							"id": 1211,
							"name": "poseidon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tree Hasher based on Poseidon.hash"
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{TreeHasher<K, V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "TreeHasher"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 1212,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1213,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1214,
									"name": "keyType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1212,
												"name": "K"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								},
								{
									"id": 1215,
									"name": "valueType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1213,
												"name": "V"
											}
										],
										"name": "Provable",
										"qualifiedName": "Provable",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1209,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1212,
										"name": "K"
									},
									{
										"type": "reference",
										"id": 1213,
										"name": "V"
									}
								],
								"name": "TreeHasher"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1216
					]
				},
				{
					"title": "Properties",
					"children": [
						1223,
						1224,
						1225
					]
				},
				{
					"title": "Methods",
					"children": [
						1234,
						1258,
						1226,
						1256,
						1232,
						1250,
						1253,
						1247,
						1241,
						1265,
						1229,
						1210
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/compact_smt/tree_hasher.ts",
					"line": 19,
					"character": 6,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/tree_hasher.ts#L19"
				}
			],
			"typeParameters": [
				{
					"id": 1271,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1272,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 1650,
			"name": "AppendOnlyTree",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Merkle tree that supports only appending leaves and not updating existing leaves."
					}
				]
			},
			"children": [
				{
					"id": 1651,
					"name": "appendLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/append_only_tree.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/append_only_tree.ts#L12"
						}
					],
					"signatures": [
						{
							"id": 1652,
							"name": "appendLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends a set of leaf values to the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1653,
									"name": "leaves",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The set of leaves to be appended."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1660,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 1661,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commit pending updates to the tree."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1736,
								"name": "IMerkleTree.commit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1735,
						"name": "IMerkleTree.commit"
					}
				},
				{
					"id": 1662,
					"name": "getDepth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 1663,
							"name": "getDepth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the depth of the tree."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1738,
								"name": "IMerkleTree.getDepth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1737,
						"name": "IMerkleTree.getDepth"
					}
				},
				{
					"id": 1666,
					"name": "getLeafValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 1667,
							"name": "getLeafValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of a leaf at the specified index."
									}
								]
							},
							"parameters": [
								{
									"id": 1668,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf value to be returned."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1669,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the data set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1742,
								"name": "IMerkleTree.getLeafValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1741,
						"name": "IMerkleTree.getLeafValue"
					}
				},
				{
					"id": 1657,
					"name": "getNumLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1658,
							"name": "getNumLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of leaves in the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1659,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the returned value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1733,
								"name": "IMerkleTree.getNumLeaves"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1732,
						"name": "IMerkleTree.getNumLeaves"
					}
				},
				{
					"id": 1654,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 1655,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current root of the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1656,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the calculated root."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1730,
								"name": "IMerkleTree.getRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1729,
						"name": "IMerkleTree.getRoot"
					}
				},
				{
					"id": 1670,
					"name": "getSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 1671,
							"name": "getSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the sibling path for a requested leaf index."
									}
								]
							},
							"parameters": [
								{
									"id": 1672,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf for which a sibling path is required."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1673,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the sibling path."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1746,
								"name": "IMerkleTree.getSiblingPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1745,
						"name": "IMerkleTree.getSiblingPath"
					}
				},
				{
					"id": 1664,
					"name": "rollback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 1665,
							"name": "rollback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rollback pending update to the tree."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1740,
								"name": "IMerkleTree.rollback"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1739,
						"name": "IMerkleTree.rollback"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						1651,
						1660,
						1662,
						1666,
						1657,
						1654,
						1670,
						1664
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/interfaces/append_only_tree.ts",
					"line": 7,
					"character": 17,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/append_only_tree.ts#L7"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1728,
					"name": "IMerkleTree"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1678,
					"name": "IndexedTree"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 1932,
					"name": "StandardTree"
				}
			]
		},
		{
			"id": 1456,
			"name": "CSparseCompactMerkleProof",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "SparseCompactMerkleProof for compact sparse merkle tree"
					}
				],
				"blockTags": [
					{
						"tag": "@interface",
						"content": [
							{
								"kind": "text",
								"text": "CSparseCompactMerkleProof"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1459,
					"name": "bitMask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 66,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L66"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 1458,
					"name": "nonMembershipLeafData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 65,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L65"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				},
				{
					"id": 1460,
					"name": "numSideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 67,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L67"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1462,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 69,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L69"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 1461,
					"name": "siblingData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 68,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L68"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				},
				{
					"id": 1457,
					"name": "sideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/compact_smt/proofs.ts",
							"line": 64,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L64"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1459,
						1458,
						1460,
						1462,
						1461,
						1457
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/compact_smt/proofs.ts",
					"line": 63,
					"character": 10,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/compact_smt/proofs.ts#L63"
				}
			]
		},
		{
			"id": 1000,
			"name": "CompactMerkleProof",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Compacted Merkle proof for an element in a MerkleTree"
					}
				],
				"blockTags": [
					{
						"tag": "@interface",
						"content": [
							{
								"kind": "text",
								"text": "CompactMerkleProof"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1004,
					"name": "bitMask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 58,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L58"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 1001,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1002,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 56,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L56"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 1003,
					"name": "sideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L57"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1004,
						1001,
						1002,
						1003
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/merkle/proofs.ts",
					"line": 54,
					"character": 10,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L54"
				}
			]
		},
		{
			"id": 1005,
			"name": "CompactMerkleProofJSON",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A type used to support serialization to json for CompactMerkleProof."
					}
				],
				"blockTags": [
					{
						"tag": "@interface",
						"content": [
							{
								"kind": "text",
								"text": "CompactMerkleProofJSON"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1009,
					"name": "bitMask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 70,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L70"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1006,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 67,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L67"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1007,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 68,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L68"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1008,
					"name": "sideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/merkle/proofs.ts",
							"line": 69,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L69"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1009,
						1006,
						1007,
						1008
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/merkle/proofs.ts",
					"line": 66,
					"character": 10,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/merkle/proofs.ts#L66"
				}
			]
		},
		{
			"id": 1728,
			"name": "IMerkleTree",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the interface for a Merkle tree."
					}
				]
			},
			"children": [
				{
					"id": 1735,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 1736,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commit pending updates to the tree."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1737,
					"name": "getDepth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 1738,
							"name": "getDepth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the depth of the tree."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1741,
					"name": "getLeafValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 1742,
							"name": "getLeafValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of a leaf at the specified index."
									}
								]
							},
							"parameters": [
								{
									"id": 1743,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf value to be returned."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1744,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the data set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1732,
					"name": "getNumLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1733,
							"name": "getNumLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of leaves in the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1734,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the returned value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						}
					]
				},
				{
					"id": 1729,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 1730,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current root of the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1731,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the calculated root."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				},
				{
					"id": 1745,
					"name": "getSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 1746,
							"name": "getSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the sibling path for a requested leaf index."
									}
								]
							},
							"parameters": [
								{
									"id": 1747,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf for which a sibling path is required."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1748,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the sibling path."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1725,
								"name": "SiblingPathSource.getSiblingPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1724,
						"name": "SiblingPathSource.getSiblingPath"
					}
				},
				{
					"id": 1739,
					"name": "rollback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 1740,
							"name": "rollback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rollback pending update to the tree."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						1735,
						1737,
						1741,
						1732,
						1729,
						1745,
						1739
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
					"line": 22,
					"character": 17,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L22"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1723,
					"name": "SiblingPathSource"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1650,
					"name": "AppendOnlyTree"
				},
				{
					"type": "reference",
					"id": 1749,
					"name": "UpdateOnlyTree"
				}
			]
		},
		{
			"id": 1678,
			"name": "IndexedTree",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Indexed merkle tree."
					}
				]
			},
			"children": [
				{
					"id": 1700,
					"name": "appendLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/append_only_tree.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/append_only_tree.ts#L12"
						}
					],
					"signatures": [
						{
							"id": 1701,
							"name": "appendLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Appends a set of leaf values to the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1702,
									"name": "leaves",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The set of leaves to be appended."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1652,
								"name": "AppendOnlyTree.appendLeaves"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1651,
						"name": "AppendOnlyTree.appendLeaves"
					}
				},
				{
					"id": 1694,
					"name": "batchInsert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 1695,
							"name": "batchInsert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Batch insert multiple leaves into the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1696,
									"name": "leaves",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Leaves to insert into the tree."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								},
								{
									"id": 1697,
									"name": "treeHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Height of the tree."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1698,
									"name": "subtreeHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Height of the subtree."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1699,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the uncommitted changes are included in the search."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1826,
															"name": "LowLeafWitnessData"
														}
													},
													{
														"type": "reference",
														"id": 1999,
														"name": "BaseSiblingPath"
													}
												]
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 1999,
														"name": "BaseSiblingPath"
													}
												]
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1709,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 1710,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commit pending updates to the tree."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1661,
								"name": "AppendOnlyTree.commit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1660,
						"name": "AppendOnlyTree.commit"
					}
				},
				{
					"id": 1679,
					"name": "findIndexOfPreviousValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 1680,
							"name": "findIndexOfPreviousValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Finds the index of the largest leaf whose value is less than or equal to the provided value."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The found leaf index and a flag indicating if the corresponding leaf's value is equal to "
											},
											{
												"kind": "code",
												"text": "`newValue`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1681,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new value to be inserted into the tree."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1682,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the uncommitted changes are included in the search."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1683,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1685,
											"name": "alreadyPresent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A flag indicating if the corresponding leaf's value is equal to "
													},
													{
														"kind": "code",
														"text": "`newValue`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
													"line": 45,
													"character": 4,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L45"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1684,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The index of the found leaf."
													}
												]
											},
											"sources": [
												{
													"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
													"line": 41,
													"character": 4,
													"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L41"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1685,
												1684
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
											"line": 37,
											"character": 5,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L37"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1711,
					"name": "getDepth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 1712,
							"name": "getDepth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the depth of the tree."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1663,
								"name": "AppendOnlyTree.getDepth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1662,
						"name": "AppendOnlyTree.getDepth"
					}
				},
				{
					"id": 1686,
					"name": "getLatestLeafDataCopy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
							"line": 54,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L54"
						}
					],
					"signatures": [
						{
							"id": 1687,
							"name": "getLatestLeafDataCopy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the latest LeafData copy."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A copy of the leaf data at the given index or undefined if the leaf was not found."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1688,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Index of the leaf of which to obtain the LeafData copy."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1689,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the uncommitted changes are included in the search."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1674,
										"name": "LeafData"
									}
								]
							}
						}
					]
				},
				{
					"id": 1715,
					"name": "getLeafValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 1716,
							"name": "getLeafValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of a leaf at the specified index."
									}
								]
							},
							"parameters": [
								{
									"id": 1717,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf value to be returned."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1718,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the data set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1667,
								"name": "AppendOnlyTree.getLeafValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1666,
						"name": "AppendOnlyTree.getLeafValue"
					}
				},
				{
					"id": 1706,
					"name": "getNumLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1707,
							"name": "getNumLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of leaves in the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1708,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the returned value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1658,
								"name": "AppendOnlyTree.getNumLeaves"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1657,
						"name": "AppendOnlyTree.getNumLeaves"
					}
				},
				{
					"id": 1703,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 1704,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current root of the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1705,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the calculated root."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1655,
								"name": "AppendOnlyTree.getRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1654,
						"name": "AppendOnlyTree.getRoot"
					}
				},
				{
					"id": 1719,
					"name": "getSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 1720,
							"name": "getSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the sibling path for a requested leaf index."
									}
								]
							},
							"parameters": [
								{
									"id": 1721,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf for which a sibling path is required."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1722,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the sibling path."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1671,
								"name": "AppendOnlyTree.getSiblingPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1670,
						"name": "AppendOnlyTree.getSiblingPath"
					}
				},
				{
					"id": 1713,
					"name": "rollback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 1714,
							"name": "rollback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rollback pending update to the tree."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1665,
								"name": "AppendOnlyTree.rollback"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1664,
						"name": "AppendOnlyTree.rollback"
					}
				},
				{
					"id": 1690,
					"name": "updateLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
							"line": 65,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 1691,
							"name": "updateLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Exposes the underlying tree's update leaf method."
									}
								]
							},
							"parameters": [
								{
									"id": 1692,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hash to set at the leaf."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1674,
										"name": "LeafData"
									}
								},
								{
									"id": 1693,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the element."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						1700,
						1694,
						1709,
						1679,
						1711,
						1686,
						1715,
						1706,
						1703,
						1719,
						1713,
						1690
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
					"line": 27,
					"character": 17,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L27"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1650,
					"name": "AppendOnlyTree"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 1830,
					"name": "StandardIndexedTree"
				}
			]
		},
		{
			"id": 1674,
			"name": "LeafData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A leaf of a tree."
					}
				]
			},
			"children": [
				{
					"id": 1676,
					"name": "nextIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An index of the next leaf."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					}
				},
				{
					"id": 1677,
					"name": "nextValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A value of the next leaf."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
							"line": 21,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					}
				},
				{
					"id": 1675,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A value of the leaf."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1676,
						1677,
						1675
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/interfaces/indexed_tree.ts",
					"line": 9,
					"character": 17,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/indexed_tree.ts#L9"
				}
			]
		},
		{
			"id": 1826,
			"name": "LowLeafWitnessData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "All of the data to be return during batch insertion."
					}
				]
			},
			"children": [
				{
					"id": 1829,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The index of low nullifier."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 34,
							"character": 4,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					}
				},
				{
					"id": 1827,
					"name": "leafData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Preimage of the low nullifier that proves non membership."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"id": 1674,
						"name": "LeafData"
					}
				},
				{
					"id": 1828,
					"name": "siblingPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sibling path to prove membership of low nullifier."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"id": 1999,
						"name": "BaseSiblingPath"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1829,
						1827,
						1828
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts",
					"line": 22,
					"character": 17,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/standard_indexed_tree/standard_indexed_tree.ts#L22"
				}
			]
		},
		{
			"id": 1723,
			"name": "SiblingPathSource",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the interface for a source of sibling paths."
					}
				]
			},
			"children": [
				{
					"id": 1724,
					"name": "getSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 1725,
							"name": "getSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the sibling path for a requested leaf index."
									}
								]
							},
							"parameters": [
								{
									"id": 1726,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf for which a sibling path is required."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1727,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the sibling path."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						1724
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
					"line": 7,
					"character": 17,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L7"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1728,
					"name": "IMerkleTree"
				}
			]
		},
		{
			"id": 593,
			"name": "SparseCompactMerkleProof",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Compacted Merkle proof for an element in a SparseMerkleTree"
					}
				],
				"blockTags": [
					{
						"tag": "@interface",
						"content": [
							{
								"kind": "text",
								"text": "SparseCompactMerkleProof"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 595,
					"name": "bitMask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 596,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				},
				{
					"id": 594,
					"name": "sideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L27"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						595,
						596,
						594
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/smt/proofs.ts",
					"line": 26,
					"character": 10,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L26"
				}
			]
		},
		{
			"id": 597,
			"name": "SparseCompactMerkleProofJSON",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A type used to support serialization to json for SparseCompactMerkleProof."
					}
				],
				"blockTags": [
					{
						"tag": "@interface",
						"content": [
							{
								"kind": "text",
								"text": "SparseCompactMerkleProofJSON"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 599,
					"name": "bitMask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 39,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L39"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 600,
					"name": "root",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 40,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 598,
					"name": "sideNodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/smt/proofs.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L38"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						599,
						600,
						598
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/smt/proofs.ts",
					"line": 37,
					"character": 10,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/smt/proofs.ts#L37"
				}
			]
		},
		{
			"id": 5,
			"name": "Store",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Store is a key-value store interface"
					}
				],
				"blockTags": [
					{
						"tag": "@interface",
						"content": [
							{
								"kind": "text",
								"text": "Store"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 35,
					"name": "clear",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 91,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L91"
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "clear",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear the store."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33,
					"name": "clearPrepareOperationCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L84"
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "clearPrepareOperationCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clear all prepare operation cache."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 31,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L78"
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use the commit() method to actually submit all prepare changes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<void>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6,
					"name": "getNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L19"
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "getNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get nodes for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field[]>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 26,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 64,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L64"
						}
					],
					"signatures": [
						{
							"id": 27,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the tree root. Error is thrown when the root does not exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Field>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 16,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 42,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 17,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the value for a key. Error is thrown when a key that does not exist is being accessed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<V>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 18,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 39,
										"name": "V"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "getValuesMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 98,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L98"
						}
					],
					"signatures": [
						{
							"id": 38,
							"name": "getValuesMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get values map, key is Field.toString()."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "{Promise<Map<string, V>>}"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 39,
												"name": "V"
											}
										],
										"name": "Map",
										"qualifiedName": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13,
					"name": "prepareDelNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "prepareDelNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 23,
					"name": "prepareDelValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 24,
							"name": "prepareDelValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare delete the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 25,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "preparePutNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "preparePutNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put nodes for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 12,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 19,
					"name": "preparePutValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 50,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L50"
						}
					],
					"signatures": [
						{
							"id": 20,
							"name": "preparePutValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare put the value for a key. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 21,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 22,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 39,
										"name": "V"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 28,
					"name": "prepareUpdateRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/store/store.ts",
							"line": 71,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L71"
						}
					],
					"signatures": [
						{
							"id": 29,
							"name": "prepareUpdateRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepare update the root. Use the commit() method to actually submit changes."
									}
								],
								"blockTags": [
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 30,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						35,
						33,
						31,
						6,
						26,
						16,
						37,
						13,
						23,
						9,
						19,
						28
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/store/store.ts",
					"line": 11,
					"character": 10,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/store/store.ts#L11"
				}
			],
			"typeParameters": [
				{
					"id": 39,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 86,
					"name": "LevelStore"
				},
				{
					"type": "reference",
					"id": 40,
					"name": "MemoryStore"
				},
				{
					"type": "reference",
					"id": 139,
					"name": "MongoStore"
				},
				{
					"type": "reference",
					"id": 199,
					"name": "RocksStore"
				}
			]
		},
		{
			"id": 1749,
			"name": "UpdateOnlyTree",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Merkle tree that supports updates at arbitrary indices but not appending."
					}
				]
			},
			"children": [
				{
					"id": 1760,
					"name": "commit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L38"
						}
					],
					"signatures": [
						{
							"id": 1761,
							"name": "commit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commit pending updates to the tree."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1736,
								"name": "IMerkleTree.commit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1735,
						"name": "IMerkleTree.commit"
					}
				},
				{
					"id": 1762,
					"name": "getDepth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 1763,
							"name": "getDepth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the depth of the tree."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1738,
								"name": "IMerkleTree.getDepth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1737,
						"name": "IMerkleTree.getDepth"
					}
				},
				{
					"id": 1766,
					"name": "getLeafValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 1767,
							"name": "getLeafValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the value of a leaf at the specified index."
									}
								]
							},
							"parameters": [
								{
									"id": 1768,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf value to be returned."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1769,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the data set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Field",
												"qualifiedName": "Field",
												"package": "o1js"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1742,
								"name": "IMerkleTree.getLeafValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1741,
						"name": "IMerkleTree.getLeafValue"
					}
				},
				{
					"id": 1757,
					"name": "getNumLeaves",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1758,
							"name": "getNumLeaves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of leaves in the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1759,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the returned value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1733,
								"name": "IMerkleTree.getNumLeaves"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1732,
						"name": "IMerkleTree.getNumLeaves"
					}
				},
				{
					"id": 1754,
					"name": "getRoot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 1755,
							"name": "getRoot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current root of the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1756,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the calculated root."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1730,
								"name": "IMerkleTree.getRoot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1729,
						"name": "IMerkleTree.getRoot"
					}
				},
				{
					"id": 1770,
					"name": "getSiblingPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 1771,
							"name": "getSiblingPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the sibling path for a requested leaf index."
									}
								]
							},
							"parameters": [
								{
									"id": 1772,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the leaf for which a sibling path is required."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								},
								{
									"id": 1773,
									"name": "includeUncommitted",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set to true to include uncommitted updates in the sibling path."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1999,
										"name": "BaseSiblingPath"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1746,
								"name": "IMerkleTree.getSiblingPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1745,
						"name": "IMerkleTree.getSiblingPath"
					}
				},
				{
					"id": 1764,
					"name": "rollback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/merkle_tree.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/merkle_tree.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 1765,
							"name": "rollback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rollback pending update to the tree."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1740,
								"name": "IMerkleTree.rollback"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 1739,
						"name": "IMerkleTree.rollback"
					}
				},
				{
					"id": 1750,
					"name": "updateLeaf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/alternatives/interfaces/update_only_tree.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/update_only_tree.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 1751,
							"name": "updateLeaf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Updates a leaf at a given index in the tree."
									}
								]
							},
							"parameters": [
								{
									"id": 1752,
									"name": "leaf",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The leaf value to be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Field",
										"qualifiedName": "Field",
										"package": "o1js"
									}
								},
								{
									"id": 1753,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The leaf to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						1760,
						1762,
						1766,
						1757,
						1754,
						1770,
						1764,
						1750
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/alternatives/interfaces/update_only_tree.ts",
					"line": 7,
					"character": 17,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/interfaces/update_only_tree.ts#L7"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 1728,
					"name": "IMerkleTree"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"id": 1774,
					"name": "SparseTree"
				}
			]
		},
		{
			"id": 1,
			"name": "Hasher",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/model.ts",
					"line": 5,
					"character": 5,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/model.ts#L5"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/model.ts",
							"line": 5,
							"character": 14,
							"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/model.ts#L5"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Field",
											"qualifiedName": "Field",
											"package": "o1js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					]
				}
			}
		},
		{
			"id": 1627,
			"name": "INITIAL_LEAF",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/lib/alternatives/tree_base.ts",
					"line": 33,
					"character": 13,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/tree_base.ts#L33"
				}
			],
			"type": {
				"type": "reference",
				"name": "Field",
				"qualifiedName": "Field",
				"package": "o1js"
			},
			"defaultValue": "..."
		},
		{
			"id": 1996,
			"name": "SiblingPath",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/alternatives/types/sibling_path.ts",
					"line": 71,
					"character": 16,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/types/sibling_path.ts#L71"
				}
			],
			"signatures": [
				{
					"id": 1997,
					"name": "SiblingPath",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1998,
							"name": "height",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 1999,
							"name": "BaseSiblingPath"
						}
					}
				}
			]
		},
		{
			"id": 1624,
			"name": "bufferToInt256",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 192,
					"character": 13,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L192"
				}
			],
			"signatures": [
				{
					"id": 1625,
					"name": "bufferToInt256",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1626,
							"name": "buf",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					}
				}
			]
		},
		{
			"id": 1610,
			"name": "countCommonPrefix",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 71,
					"character": 9,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L71"
				}
			],
			"signatures": [
				{
					"id": 1611,
					"name": "countCommonPrefix",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1612,
							"name": "data1bits",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Bool",
									"qualifiedName": "Bool",
									"package": "o1js"
								}
							}
						},
						{
							"id": 1613,
							"name": "data2bits",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Bool",
									"qualifiedName": "Bool",
									"package": "o1js"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 1614,
			"name": "countSetBits",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 86,
					"character": 9,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L86"
				}
			],
			"signatures": [
				{
					"id": 1615,
					"name": "countSetBits",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1616,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Bool",
									"qualifiedName": "Bool",
									"package": "o1js"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 1597,
			"name": "createEmptyValue",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 20,
					"character": 9,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L20"
				}
			],
			"signatures": [
				{
					"id": 1598,
					"name": "createEmptyValue",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a empty value for a Struct Type"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "{T}"
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 1599,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1600,
							"name": "valueType",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1599,
										"name": "T"
									}
								],
								"name": "Provable",
								"qualifiedName": "Provable",
								"package": "o1js"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1599,
						"name": "T"
					}
				}
			]
		},
		{
			"id": 1579,
			"name": "defaultNodes",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/default_nodes.ts",
					"line": 12,
					"character": 9,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/default_nodes.ts#L12"
				}
			],
			"signatures": [
				{
					"id": 1580,
					"name": "defaultNodes",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1581,
							"name": "hasher",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Hasher"
							}
						},
						{
							"id": 1582,
							"name": "treeHeight",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "SMT_DEPTH"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				}
			]
		},
		{
			"id": 1601,
			"name": "fieldToHexString",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 39,
					"character": 9,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 1602,
					"name": "fieldToHexString",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Convert field to hex string."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "{string}"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 1603,
							"name": "f",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Field",
								"qualifiedName": "Field",
								"package": "o1js"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1604,
			"name": "hexStringToField",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 49,
					"character": 9,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L49"
				}
			],
			"signatures": [
				{
					"id": 1605,
					"name": "hexStringToField",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Convert hex strong to field."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "{Field}"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 1606,
							"name": "hexStr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Field",
						"qualifiedName": "Field",
						"package": "o1js"
					}
				}
			]
		},
		{
			"id": 1621,
			"name": "int256ToBuffer",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 181,
					"character": 13,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L181"
				}
			],
			"signatures": [
				{
					"id": 1622,
					"name": "int256ToBuffer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1623,
							"name": "n",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer",
						"qualifiedName": "global.Buffer",
						"package": "@types/node"
					}
				}
			]
		},
		{
			"id": 1640,
			"name": "loadTree",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/alternatives/load_tree.ts",
					"line": 13,
					"character": 22,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/load_tree.ts#L13"
				}
			],
			"signatures": [
				{
					"id": 1641,
					"name": "loadTree",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new tree and sets its root, depth and size based on the meta data which are associated with the name."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The newly created tree."
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 1642,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1642,
										"name": "T"
									}
								],
								"name": "TreeBase"
							}
						}
					],
					"parameters": [
						{
							"id": 1643,
							"name": "c",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of the tree to be instantiated."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1644,
									"name": "__type",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/alternatives/load_tree.ts",
											"line": 14,
											"character": 5,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/load_tree.ts#L14"
										}
									],
									"signatures": [
										{
											"id": 1645,
											"name": "new c",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"parameters": [
												{
													"id": 1646,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1642,
												"name": "T"
											}
										}
									]
								}
							}
						},
						{
							"id": 1647,
							"name": "db",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A database used to store the Merkle tree data."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								],
								"name": "Level",
								"qualifiedName": "Level",
								"package": "level"
							}
						},
						{
							"id": 1648,
							"name": "hasher",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A hasher used to compute hash paths."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Hasher"
							}
						},
						{
							"id": 1649,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Name of the tree."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1642,
								"name": "T"
							}
						],
						"name": "Promise",
						"qualifiedName": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 1628,
			"name": "newTree",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/alternatives/new_tree.ts",
					"line": 15,
					"character": 22,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/new_tree.ts#L15"
				}
			],
			"signatures": [
				{
					"id": 1629,
					"name": "newTree",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a new tree."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The newly created tree."
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 1630,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1630,
										"name": "T"
									}
								],
								"name": "TreeBase"
							}
						}
					],
					"parameters": [
						{
							"id": 1631,
							"name": "c",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of the tree to be instantiated."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1632,
									"name": "__type",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/alternatives/new_tree.ts",
											"line": 16,
											"character": 5,
											"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/alternatives/new_tree.ts#L16"
										}
									],
									"signatures": [
										{
											"id": 1633,
											"name": "new c",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"parameters": [
												{
													"id": 1634,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1630,
												"name": "T"
											}
										}
									]
								}
							}
						},
						{
							"id": 1635,
							"name": "db",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A database used to store the Merkle tree data."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Buffer",
										"qualifiedName": "global.Buffer",
										"package": "@types/node"
									}
								],
								"name": "Level",
								"qualifiedName": "Level",
								"package": "level"
							}
						},
						{
							"id": 1636,
							"name": "hasher",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A hasher used to compute hash paths."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Hasher"
							}
						},
						{
							"id": 1637,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Name of the tree."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1638,
							"name": "depth",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Depth of the tree."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1639,
							"name": "prefilledSize",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number of leaves that are prefilled with values."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1630,
								"name": "T"
							}
						],
						"name": "Promise",
						"qualifiedName": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 1617,
			"name": "printBits",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 101,
					"character": 9,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L101"
				}
			],
			"signatures": [
				{
					"id": 1618,
					"name": "printBits",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Print bits string."
							}
						]
					},
					"parameters": [
						{
							"id": 1619,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Bool",
									"qualifiedName": "Bool",
									"package": "o1js"
								}
							}
						},
						{
							"id": 1620,
							"name": "varName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1607,
			"name": "strToFieldArry",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 59,
					"character": 9,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L59"
				}
			],
			"signatures": [
				{
					"id": 1608,
					"name": "strToFieldArry",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Convert a string to Field array."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "{Field[]}"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 1609,
							"name": "str",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Field",
							"qualifiedName": "Field",
							"package": "o1js"
						}
					}
				}
			]
		},
		{
			"id": 1590,
			"name": "toBigIntBE",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 156,
					"character": 16,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L156"
				}
			],
			"signatures": [
				{
					"id": 1591,
					"name": "toBigIntBE",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Convert a big-endian buffer into a BigInt."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A BigInt with the big-endian representation of buf."
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 1592,
							"name": "buf",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The big-endian buffer to convert."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					}
				}
			]
		},
		{
			"id": 1583,
			"name": "toBigIntLE",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 125,
					"character": 16,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L125"
				}
			],
			"signatures": [
				{
					"id": 1584,
					"name": "toBigIntLE",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Convert a little-endian buffer into a BigInt."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A BigInt with the little-endian representation of buf."
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 1585,
							"name": "buf",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The little-endian buffer to convert."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Buffer",
								"qualifiedName": "global.Buffer",
								"package": "@types/node"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "bigint"
					}
				}
			]
		},
		{
			"id": 1593,
			"name": "toBufferBE",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 170,
					"character": 16,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L170"
				}
			],
			"signatures": [
				{
					"id": 1594,
					"name": "toBufferBE",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Convert a BigInt to a big-endian buffer."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A big-endian buffer representation of num."
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 1595,
							"name": "num",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The BigInt to convert."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						},
						{
							"id": 1596,
							"name": "width",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of bytes that the resulting buffer should be."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer",
						"qualifiedName": "global.Buffer",
						"package": "@types/node"
					}
				}
			]
		},
		{
			"id": 1586,
			"name": "toBufferLE",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/utils.ts",
					"line": 141,
					"character": 16,
					"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/lib/utils.ts#L141"
				}
			],
			"signatures": [
				{
					"id": 1587,
					"name": "toBufferLE",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Convert a BigInt to a little-endian buffer."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A little-endian buffer representation of num."
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 1588,
							"name": "num",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The BigInt to convert."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						},
						{
							"id": 1589,
							"name": "width",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of bytes that the resulting buffer should be."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Buffer",
						"qualifiedName": "global.Buffer",
						"package": "@types/node"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				841,
				1999,
				1370,
				1463,
				1273,
				1091,
				1010,
				601,
				86,
				40,
				700,
				909,
				139,
				1983,
				1549,
				1053,
				653,
				805,
				372,
				199,
				504,
				431,
				252,
				1774,
				1830,
				1932,
				1209
			]
		},
		{
			"title": "Interfaces",
			"children": [
				1650,
				1456,
				1000,
				1005,
				1728,
				1678,
				1674,
				1826,
				1723,
				593,
				597,
				5,
				1749
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1
			]
		},
		{
			"title": "Variables",
			"children": [
				1627
			]
		},
		{
			"title": "Functions",
			"children": [
				1996,
				1624,
				1610,
				1614,
				1597,
				1579,
				1601,
				1604,
				1621,
				1640,
				1628,
				1617,
				1607,
				1590,
				1583,
				1593,
				1586
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0,
			"url": "https://github.com/plus3-labs/o1js-merkle/blob/7ad8811/src/index.ts#L1"
		}
	]
}